var VDAY=function(e){var t={};function a(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,a),i.l=!0,i.exports}return a.m=e,a.c=t,a.d=function(e,t,r){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(a.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)a.d(r,i,function(t){return e[t]}.bind(null,i));return r},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="",a(a.s=11)}([function(e,t){THREE.CopyShader={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float opacity;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","gl_FragColor = opacity * texel;","}"].join("\n")}},function(e,t){var a,r,i;THREE.EffectComposer=function(e,t){if(this.renderer=e,void 0===t){var a={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat,stencilBuffer:!1},r=e.getSize(new THREE.Vector2);this._pixelRatio=e.getPixelRatio(),this._width=r.width,this._height=r.height,(t=new THREE.WebGLRenderTarget(this._width*this._pixelRatio,this._height*this._pixelRatio,a)).texture.name="EffectComposer.rt1"}else this._pixelRatio=1,this._width=t.width,this._height=t.height;this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],void 0===THREE.CopyShader&&console.error("THREE.EffectComposer relies on THREE.CopyShader"),void 0===THREE.ShaderPass&&console.error("THREE.EffectComposer relies on THREE.ShaderPass"),this.copyPass=new THREE.ShaderPass(THREE.CopyShader),this.clock=new THREE.Clock},Object.assign(THREE.EffectComposer.prototype,{swapBuffers:function(){var e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e},addPass:function(e){this.passes.push(e);var t=this.renderer.getDrawingBufferSize(new THREE.Vector2);e.setSize(t.width,t.height)},insertPass:function(e,t){this.passes.splice(t,0,e)},isLastEnabledPass:function(e){for(var t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0},render:function(e){void 0===e&&(e=this.clock.getDelta());var t,a,r=this.renderer.getRenderTarget(),i=!1,n=this.passes.length;for(a=0;a<n;a++)if(!1!==(t=this.passes[a]).enabled){if(t.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(a),t.render(this.renderer,this.writeBuffer,this.readBuffer,e,i),t.needsSwap){if(i){var o=this.renderer.context;o.stencilFunc(o.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),o.stencilFunc(o.EQUAL,1,4294967295)}this.swapBuffers()}void 0!==THREE.MaskPass&&(t instanceof THREE.MaskPass?i=!0:t instanceof THREE.ClearMaskPass&&(i=!1))}this.renderer.setRenderTarget(r)},reset:function(e){if(void 0===e){var t=this.renderer.getSize(new THREE.Vector2);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,(e=this.renderTarget1.clone()).setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2},setSize:function(e,t){this._width=e,this._height=t;var a=this._width*this._pixelRatio,r=this._height*this._pixelRatio;this.renderTarget1.setSize(a,r),this.renderTarget2.setSize(a,r);for(var i=0;i<this.passes.length;i++)this.passes[i].setSize(a,r)},setPixelRatio:function(e){this._pixelRatio=e,this.setSize(this._width,this._height)}}),THREE.Pass=function(){this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1},Object.assign(THREE.Pass.prototype,{setSize:function(){},render:function(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}}),THREE.Pass.FullScreenQuad=(a=new THREE.OrthographicCamera(-1,1,1,-1,0,1),r=new THREE.PlaneBufferGeometry(2,2),i=function(e){this._mesh=new THREE.Mesh(r,e)},Object.defineProperty(i.prototype,"material",{get:function(){return this._mesh.material},set:function(e){this._mesh.material=e}}),Object.assign(i.prototype,{render:function(e){e.render(this._mesh,a)}}),i)},function(e,t){THREE.FXAAShader={uniforms:{tDiffuse:{value:null},resolution:{value:new THREE.Vector2(1/1024,1/512)}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["precision highp float;","","uniform sampler2D tDiffuse;","","uniform vec2 resolution;","","varying vec2 vUv;","","// FXAA 3.11 implementation by NVIDIA, ported to WebGL by Agost Biro (biro@archilogic.com)","","//----------------------------------------------------------------------------------","// File:        es3-keplerFXAAassetsshaders/FXAA_DefaultES.frag","// SDK Version: v3.00","// Email:       gameworks@nvidia.com","// Site:        http://developer.nvidia.com/","//","// Copyright (c) 2014-2015, NVIDIA CORPORATION. All rights reserved.","//","// Redistribution and use in source and binary forms, with or without","// modification, are permitted provided that the following conditions","// are met:","//  * Redistributions of source code must retain the above copyright","//    notice, this list of conditions and the following disclaimer.","//  * Redistributions in binary form must reproduce the above copyright","//    notice, this list of conditions and the following disclaimer in the","//    documentation and/or other materials provided with the distribution.","//  * Neither the name of NVIDIA CORPORATION nor the names of its","//    contributors may be used to endorse or promote products derived","//    from this software without specific prior written permission.","//","// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY","// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE","// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR","// PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR","// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,","// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,","// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR","// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY","// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT","// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE","// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","//","//----------------------------------------------------------------------------------","","#define FXAA_PC 1","#define FXAA_GLSL_100 1","#define FXAA_QUALITY_PRESET 12","","#define FXAA_GREEN_AS_LUMA 1","","/*--------------------------------------------------------------------------*/","#ifndef FXAA_PC_CONSOLE","    //","    // The console algorithm for PC is included","    // for developers targeting really low spec machines.","    // Likely better to just run FXAA_PC, and use a really low preset.","    //","    #define FXAA_PC_CONSOLE 0","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_GLSL_120","    #define FXAA_GLSL_120 0","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_GLSL_130","    #define FXAA_GLSL_130 0","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_HLSL_3","    #define FXAA_HLSL_3 0","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_HLSL_4","    #define FXAA_HLSL_4 0","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_HLSL_5","    #define FXAA_HLSL_5 0","#endif","/*==========================================================================*/","#ifndef FXAA_GREEN_AS_LUMA","    //","    // For those using non-linear color,","    // and either not able to get luma in alpha, or not wanting to,","    // this enables FXAA to run using green as a proxy for luma.","    // So with this enabled, no need to pack luma in alpha.","    //","    // This will turn off AA on anything which lacks some amount of green.","    // Pure red and blue or combination of only R and B, will get no AA.","    //","    // Might want to lower the settings for both,","    //    fxaaConsoleEdgeThresholdMin","    //    fxaaQualityEdgeThresholdMin","    // In order to insure AA does not get turned off on colors","    // which contain a minor amount of green.","    //","    // 1 = On.","    // 0 = Off.","    //","    #define FXAA_GREEN_AS_LUMA 0","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_EARLY_EXIT","    //","    // Controls algorithm's early exit path.","    // On PS3 turning this ON adds 2 cycles to the shader.","    // On 360 turning this OFF adds 10ths of a millisecond to the shader.","    // Turning this off on console will result in a more blurry image.","    // So this defaults to on.","    //","    // 1 = On.","    // 0 = Off.","    //","    #define FXAA_EARLY_EXIT 1","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_DISCARD","    //","    // Only valid for PC OpenGL currently.","    // Probably will not work when FXAA_GREEN_AS_LUMA = 1.","    //","    // 1 = Use discard on pixels which don't need AA.","    //     For APIs which enable concurrent TEX+ROP from same surface.","    // 0 = Return unchanged color on pixels which don't need AA.","    //","    #define FXAA_DISCARD 0","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_FAST_PIXEL_OFFSET","    //","    // Used for GLSL 120 only.","    //","    // 1 = GL API supports fast pixel offsets","    // 0 = do not use fast pixel offsets","    //","    #ifdef GL_EXT_gpu_shader4","        #define FXAA_FAST_PIXEL_OFFSET 1","    #endif","    #ifdef GL_NV_gpu_shader5","        #define FXAA_FAST_PIXEL_OFFSET 1","    #endif","    #ifdef GL_ARB_gpu_shader5","        #define FXAA_FAST_PIXEL_OFFSET 1","    #endif","    #ifndef FXAA_FAST_PIXEL_OFFSET","        #define FXAA_FAST_PIXEL_OFFSET 0","    #endif","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_GATHER4_ALPHA","    //","    // 1 = API supports gather4 on alpha channel.","    // 0 = API does not support gather4 on alpha channel.","    //","    #if (FXAA_HLSL_5 == 1)","        #define FXAA_GATHER4_ALPHA 1","    #endif","    #ifdef GL_ARB_gpu_shader5","        #define FXAA_GATHER4_ALPHA 1","    #endif","    #ifdef GL_NV_gpu_shader5","        #define FXAA_GATHER4_ALPHA 1","    #endif","    #ifndef FXAA_GATHER4_ALPHA","        #define FXAA_GATHER4_ALPHA 0","    #endif","#endif","","","/*============================================================================","                        FXAA QUALITY - TUNING KNOBS","------------------------------------------------------------------------------","NOTE the other tuning knobs are now in the shader function inputs!","============================================================================*/","#ifndef FXAA_QUALITY_PRESET","    //","    // Choose the quality preset.","    // This needs to be compiled into the shader as it effects code.","    // Best option to include multiple presets is to","    // in each shader define the preset, then include this file.","    //","    // OPTIONS","    // -----------------------------------------------------------------------","    // 10 to 15 - default medium dither (10=fastest, 15=highest quality)","    // 20 to 29 - less dither, more expensive (20=fastest, 29=highest quality)","    // 39       - no dither, very expensive","    //","    // NOTES","    // -----------------------------------------------------------------------","    // 12 = slightly faster then FXAA 3.9 and higher edge quality (default)","    // 13 = about same speed as FXAA 3.9 and better than 12","    // 23 = closest to FXAA 3.9 visually and performance wise","    //  _ = the lowest digit is directly related to performance","    // _  = the highest digit is directly related to style","    //","    #define FXAA_QUALITY_PRESET 12","#endif","","","/*============================================================================","","                           FXAA QUALITY - PRESETS","","============================================================================*/","","/*============================================================================","                     FXAA QUALITY - MEDIUM DITHER PRESETS","============================================================================*/","#if (FXAA_QUALITY_PRESET == 10)","    #define FXAA_QUALITY_PS 3","    #define FXAA_QUALITY_P0 1.5","    #define FXAA_QUALITY_P1 3.0","    #define FXAA_QUALITY_P2 12.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 11)","    #define FXAA_QUALITY_PS 4","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 3.0","    #define FXAA_QUALITY_P3 12.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 12)","    #define FXAA_QUALITY_PS 5","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 4.0","    #define FXAA_QUALITY_P4 12.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 13)","    #define FXAA_QUALITY_PS 6","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 4.0","    #define FXAA_QUALITY_P5 12.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 14)","    #define FXAA_QUALITY_PS 7","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 4.0","    #define FXAA_QUALITY_P6 12.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 15)","    #define FXAA_QUALITY_PS 8","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 2.0","    #define FXAA_QUALITY_P6 4.0","    #define FXAA_QUALITY_P7 12.0","#endif","","/*============================================================================","                     FXAA QUALITY - LOW DITHER PRESETS","============================================================================*/","#if (FXAA_QUALITY_PRESET == 20)","    #define FXAA_QUALITY_PS 3","    #define FXAA_QUALITY_P0 1.5","    #define FXAA_QUALITY_P1 2.0","    #define FXAA_QUALITY_P2 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 21)","    #define FXAA_QUALITY_PS 4","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 22)","    #define FXAA_QUALITY_PS 5","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 23)","    #define FXAA_QUALITY_PS 6","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 24)","    #define FXAA_QUALITY_PS 7","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 3.0","    #define FXAA_QUALITY_P6 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 25)","    #define FXAA_QUALITY_PS 8","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 2.0","    #define FXAA_QUALITY_P6 4.0","    #define FXAA_QUALITY_P7 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 26)","    #define FXAA_QUALITY_PS 9","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 2.0","    #define FXAA_QUALITY_P6 2.0","    #define FXAA_QUALITY_P7 4.0","    #define FXAA_QUALITY_P8 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 27)","    #define FXAA_QUALITY_PS 10","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 2.0","    #define FXAA_QUALITY_P6 2.0","    #define FXAA_QUALITY_P7 2.0","    #define FXAA_QUALITY_P8 4.0","    #define FXAA_QUALITY_P9 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 28)","    #define FXAA_QUALITY_PS 11","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 2.0","    #define FXAA_QUALITY_P6 2.0","    #define FXAA_QUALITY_P7 2.0","    #define FXAA_QUALITY_P8 2.0","    #define FXAA_QUALITY_P9 4.0","    #define FXAA_QUALITY_P10 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 29)","    #define FXAA_QUALITY_PS 12","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 2.0","    #define FXAA_QUALITY_P6 2.0","    #define FXAA_QUALITY_P7 2.0","    #define FXAA_QUALITY_P8 2.0","    #define FXAA_QUALITY_P9 2.0","    #define FXAA_QUALITY_P10 4.0","    #define FXAA_QUALITY_P11 8.0","#endif","","/*============================================================================","                     FXAA QUALITY - EXTREME QUALITY","============================================================================*/","#if (FXAA_QUALITY_PRESET == 39)","    #define FXAA_QUALITY_PS 12","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.0","    #define FXAA_QUALITY_P2 1.0","    #define FXAA_QUALITY_P3 1.0","    #define FXAA_QUALITY_P4 1.0","    #define FXAA_QUALITY_P5 1.5","    #define FXAA_QUALITY_P6 2.0","    #define FXAA_QUALITY_P7 2.0","    #define FXAA_QUALITY_P8 2.0","    #define FXAA_QUALITY_P9 2.0","    #define FXAA_QUALITY_P10 4.0","    #define FXAA_QUALITY_P11 8.0","#endif","","","","/*============================================================================","","                                API PORTING","","============================================================================*/","#if (FXAA_GLSL_100 == 1) || (FXAA_GLSL_120 == 1) || (FXAA_GLSL_130 == 1)","    #define FxaaBool bool","    #define FxaaDiscard discard","    #define FxaaFloat float","    #define FxaaFloat2 vec2","    #define FxaaFloat3 vec3","    #define FxaaFloat4 vec4","    #define FxaaHalf float","    #define FxaaHalf2 vec2","    #define FxaaHalf3 vec3","    #define FxaaHalf4 vec4","    #define FxaaInt2 ivec2","    #define FxaaSat(x) clamp(x, 0.0, 1.0)","    #define FxaaTex sampler2D","#else","    #define FxaaBool bool","    #define FxaaDiscard clip(-1)","    #define FxaaFloat float","    #define FxaaFloat2 float2","    #define FxaaFloat3 float3","    #define FxaaFloat4 float4","    #define FxaaHalf half","    #define FxaaHalf2 half2","    #define FxaaHalf3 half3","    #define FxaaHalf4 half4","    #define FxaaSat(x) saturate(x)","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_GLSL_100 == 1)","  #define FxaaTexTop(t, p) texture2D(t, p, 0.0)","  #define FxaaTexOff(t, p, o, r) texture2D(t, p + (o * r), 0.0)","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_GLSL_120 == 1)","    // Requires,","    //  #version 120","    // And at least,","    //  #extension GL_EXT_gpu_shader4 : enable","    //  (or set FXAA_FAST_PIXEL_OFFSET 1 to work like DX9)","    #define FxaaTexTop(t, p) texture2DLod(t, p, 0.0)","    #if (FXAA_FAST_PIXEL_OFFSET == 1)","        #define FxaaTexOff(t, p, o, r) texture2DLodOffset(t, p, 0.0, o)","    #else","        #define FxaaTexOff(t, p, o, r) texture2DLod(t, p + (o * r), 0.0)","    #endif","    #if (FXAA_GATHER4_ALPHA == 1)","        // use #extension GL_ARB_gpu_shader5 : enable","        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)","        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)","        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)","        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)","    #endif","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_GLSL_130 == 1)",'    // Requires "#version 130" or better',"    #define FxaaTexTop(t, p) textureLod(t, p, 0.0)","    #define FxaaTexOff(t, p, o, r) textureLodOffset(t, p, 0.0, o)","    #if (FXAA_GATHER4_ALPHA == 1)","        // use #extension GL_ARB_gpu_shader5 : enable","        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)","        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)","        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)","        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)","    #endif","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_HLSL_3 == 1)","    #define FxaaInt2 float2","    #define FxaaTex sampler2D","    #define FxaaTexTop(t, p) tex2Dlod(t, float4(p, 0.0, 0.0))","    #define FxaaTexOff(t, p, o, r) tex2Dlod(t, float4(p + (o * r), 0, 0))","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_HLSL_4 == 1)","    #define FxaaInt2 int2","    struct FxaaTex { SamplerState smpl; Texture2D tex; };","    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)","    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_HLSL_5 == 1)","    #define FxaaInt2 int2","    struct FxaaTex { SamplerState smpl; Texture2D tex; };","    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)","    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)","    #define FxaaTexAlpha4(t, p) t.tex.GatherAlpha(t.smpl, p)","    #define FxaaTexOffAlpha4(t, p, o) t.tex.GatherAlpha(t.smpl, p, o)","    #define FxaaTexGreen4(t, p) t.tex.GatherGreen(t.smpl, p)","    #define FxaaTexOffGreen4(t, p, o) t.tex.GatherGreen(t.smpl, p, o)","#endif","","","/*============================================================================","                   GREEN AS LUMA OPTION SUPPORT FUNCTION","============================================================================*/","#if (FXAA_GREEN_AS_LUMA == 0)","    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.w; }","#else","    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.y; }","#endif","","","","","/*============================================================================","","                             FXAA3 QUALITY - PC","","============================================================================*/","#if (FXAA_PC == 1)","/*--------------------------------------------------------------------------*/","FxaaFloat4 FxaaPixelShader(","    //","    // Use noperspective interpolation here (turn off perspective interpolation).","    // {xy} = center of pixel","    FxaaFloat2 pos,","    //","    // Used only for FXAA Console, and not used on the 360 version.","    // Use noperspective interpolation here (turn off perspective interpolation).","    // {xy_} = upper left of pixel","    // {_zw} = lower right of pixel","    FxaaFloat4 fxaaConsolePosPos,","    //","    // Input color texture.","    // {rgb_} = color in linear or perceptual color space","    // if (FXAA_GREEN_AS_LUMA == 0)","    //     {__a} = luma in perceptual color space (not linear)","    FxaaTex tex,","    //","    // Only used on the optimized 360 version of FXAA Console.",'    // For everything but 360, just use the same input here as for "tex".',"    // For 360, same texture, just alias with a 2nd sampler.","    // This sampler needs to have an exponent bias of -1.","    FxaaTex fxaaConsole360TexExpBiasNegOne,","    //","    // Only used on the optimized 360 version of FXAA Console.",'    // For everything but 360, just use the same input here as for "tex".',"    // For 360, same texture, just alias with a 3nd sampler.","    // This sampler needs to have an exponent bias of -2.","    FxaaTex fxaaConsole360TexExpBiasNegTwo,","    //","    // Only used on FXAA Quality.","    // This must be from a constant/uniform.","    // {x_} = 1.0/screenWidthInPixels","    // {_y} = 1.0/screenHeightInPixels","    FxaaFloat2 fxaaQualityRcpFrame,","    //","    // Only used on FXAA Console.","    // This must be from a constant/uniform.","    // This effects sub-pixel AA quality and inversely sharpness.","    //   Where N ranges between,","    //     N = 0.50 (default)","    //     N = 0.33 (sharper)","    // {x__} = -N/screenWidthInPixels","    // {_y_} = -N/screenHeightInPixels","    // {_z_} =  N/screenWidthInPixels","    // {__w} =  N/screenHeightInPixels","    FxaaFloat4 fxaaConsoleRcpFrameOpt,","    //","    // Only used on FXAA Console.","    // Not used on 360, but used on PS3 and PC.","    // This must be from a constant/uniform.","    // {x__} = -2.0/screenWidthInPixels","    // {_y_} = -2.0/screenHeightInPixels","    // {_z_} =  2.0/screenWidthInPixels","    // {__w} =  2.0/screenHeightInPixels","    FxaaFloat4 fxaaConsoleRcpFrameOpt2,","    //","    // Only used on FXAA Console.","    // Only used on 360 in place of fxaaConsoleRcpFrameOpt2.","    // This must be from a constant/uniform.","    // {x__} =  8.0/screenWidthInPixels","    // {_y_} =  8.0/screenHeightInPixels","    // {_z_} = -4.0/screenWidthInPixels","    // {__w} = -4.0/screenHeightInPixels","    FxaaFloat4 fxaaConsole360RcpFrameOpt2,","    //","    // Only used on FXAA Quality.","    // This used to be the FXAA_QUALITY_SUBPIX define.","    // It is here now to allow easier tuning.","    // Choose the amount of sub-pixel aliasing removal.","    // This can effect sharpness.","    //   1.00 - upper limit (softer)","    //   0.75 - default amount of filtering","    //   0.50 - lower limit (sharper, less sub-pixel aliasing removal)","    //   0.25 - almost off","    //   0.00 - completely off","    FxaaFloat fxaaQualitySubpix,","    //","    // Only used on FXAA Quality.","    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD define.","    // It is here now to allow easier tuning.","    // The minimum amount of local contrast required to apply algorithm.","    //   0.333 - too little (faster)","    //   0.250 - low quality","    //   0.166 - default","    //   0.125 - high quality","    //   0.063 - overkill (slower)","    FxaaFloat fxaaQualityEdgeThreshold,","    //","    // Only used on FXAA Quality.","    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD_MIN define.","    // It is here now to allow easier tuning.","    // Trims the algorithm from processing darks.","    //   0.0833 - upper limit (default, the start of visible unfiltered edges)","    //   0.0625 - high quality (faster)","    //   0.0312 - visible limit (slower)","    // Special notes when using FXAA_GREEN_AS_LUMA,","    //   Likely want to set this to zero.","    //   As colors that are mostly not-green","    //   will appear very dark in the green channel!","    //   Tune by looking at mostly non-green content,","    //   then start at zero and increase until aliasing is a problem.","    FxaaFloat fxaaQualityEdgeThresholdMin,","    //","    // Only used on FXAA Console.","    // This used to be the FXAA_CONSOLE_EDGE_SHARPNESS define.","    // It is here now to allow easier tuning.","    // This does not effect PS3, as this needs to be compiled in.","    //   Use FXAA_CONSOLE_PS3_EDGE_SHARPNESS for PS3.","    //   Due to the PS3 being ALU bound,","    //   there are only three safe values here: 2 and 4 and 8.","    //   These options use the shaders ability to a free *|/ by 2|4|8.","    // For all other platforms can be a non-power of two.","    //   8.0 is sharper (default!!!)","    //   4.0 is softer","    //   2.0 is really soft (good only for vector graphics inputs)","    FxaaFloat fxaaConsoleEdgeSharpness,","    //","    // Only used on FXAA Console.","    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD define.","    // It is here now to allow easier tuning.","    // This does not effect PS3, as this needs to be compiled in.","    //   Use FXAA_CONSOLE_PS3_EDGE_THRESHOLD for PS3.","    //   Due to the PS3 being ALU bound,","    //   there are only two safe values here: 1/4 and 1/8.","    //   These options use the shaders ability to a free *|/ by 2|4|8.","    // The console setting has a different mapping than the quality setting.","    // Other platforms can use other values.","    //   0.125 leaves less aliasing, but is softer (default!!!)","    //   0.25 leaves more aliasing, and is sharper","    FxaaFloat fxaaConsoleEdgeThreshold,","    //","    // Only used on FXAA Console.","    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD_MIN define.","    // It is here now to allow easier tuning.","    // Trims the algorithm from processing darks.","    // The console setting has a different mapping than the quality setting.","    // This only applies when FXAA_EARLY_EXIT is 1.","    // This does not apply to PS3,","    // PS3 was simplified to avoid more shader instructions.","    //   0.06 - faster but more aliasing in darks","    //   0.05 - default","    //   0.04 - slower and less aliasing in darks","    // Special notes when using FXAA_GREEN_AS_LUMA,","    //   Likely want to set this to zero.","    //   As colors that are mostly not-green","    //   will appear very dark in the green channel!","    //   Tune by looking at mostly non-green content,","    //   then start at zero and increase until aliasing is a problem.","    FxaaFloat fxaaConsoleEdgeThresholdMin,","    //","    // Extra constants for 360 FXAA Console only.","    // Use zeros or anything else for other platforms.","    // These must be in physical constant registers and NOT immedates.","    // Immedates will result in compiler un-optimizing.","    // {xyzw} = float4(1.0, -1.0, 0.25, -0.25)","    FxaaFloat4 fxaaConsole360ConstDir",") {","/*--------------------------------------------------------------------------*/","    FxaaFloat2 posM;","    posM.x = pos.x;","    posM.y = pos.y;","    #if (FXAA_GATHER4_ALPHA == 1)","        #if (FXAA_DISCARD == 0)","            FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);","            #if (FXAA_GREEN_AS_LUMA == 0)","                #define lumaM rgbyM.w","            #else","                #define lumaM rgbyM.y","            #endif","        #endif","        #if (FXAA_GREEN_AS_LUMA == 0)","            FxaaFloat4 luma4A = FxaaTexAlpha4(tex, posM);","            FxaaFloat4 luma4B = FxaaTexOffAlpha4(tex, posM, FxaaInt2(-1, -1));","        #else","            FxaaFloat4 luma4A = FxaaTexGreen4(tex, posM);","            FxaaFloat4 luma4B = FxaaTexOffGreen4(tex, posM, FxaaInt2(-1, -1));","        #endif","        #if (FXAA_DISCARD == 1)","            #define lumaM luma4A.w","        #endif","        #define lumaE luma4A.z","        #define lumaS luma4A.x","        #define lumaSE luma4A.y","        #define lumaNW luma4B.w","        #define lumaN luma4B.z","        #define lumaW luma4B.x","    #else","        FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);","        #if (FXAA_GREEN_AS_LUMA == 0)","            #define lumaM rgbyM.w","        #else","            #define lumaM rgbyM.y","        #endif","        #if (FXAA_GLSL_100 == 1)","          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0, 1.0), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 0.0), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0,-1.0), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 0.0), fxaaQualityRcpFrame.xy));","        #else","          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0, 1), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 0), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0,-1), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 0), fxaaQualityRcpFrame.xy));","        #endif","    #endif","/*--------------------------------------------------------------------------*/","    FxaaFloat maxSM = max(lumaS, lumaM);","    FxaaFloat minSM = min(lumaS, lumaM);","    FxaaFloat maxESM = max(lumaE, maxSM);","    FxaaFloat minESM = min(lumaE, minSM);","    FxaaFloat maxWN = max(lumaN, lumaW);","    FxaaFloat minWN = min(lumaN, lumaW);","    FxaaFloat rangeMax = max(maxWN, maxESM);","    FxaaFloat rangeMin = min(minWN, minESM);","    FxaaFloat rangeMaxScaled = rangeMax * fxaaQualityEdgeThreshold;","    FxaaFloat range = rangeMax - rangeMin;","    FxaaFloat rangeMaxClamped = max(fxaaQualityEdgeThresholdMin, rangeMaxScaled);","    FxaaBool earlyExit = range < rangeMaxClamped;","/*--------------------------------------------------------------------------*/","    if(earlyExit)","        #if (FXAA_DISCARD == 1)","            FxaaDiscard;","        #else","            return rgbyM;","        #endif","/*--------------------------------------------------------------------------*/","    #if (FXAA_GATHER4_ALPHA == 0)","        #if (FXAA_GLSL_100 == 1)","          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0,-1.0), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 1.0), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0,-1.0), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 1.0), fxaaQualityRcpFrame.xy));","        #else","          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1,-1), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 1), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1,-1), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));","        #endif","    #else","        FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(1, -1), fxaaQualityRcpFrame.xy));","        FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));","    #endif","/*--------------------------------------------------------------------------*/","    FxaaFloat lumaNS = lumaN + lumaS;","    FxaaFloat lumaWE = lumaW + lumaE;","    FxaaFloat subpixRcpRange = 1.0/range;","    FxaaFloat subpixNSWE = lumaNS + lumaWE;","    FxaaFloat edgeHorz1 = (-2.0 * lumaM) + lumaNS;","    FxaaFloat edgeVert1 = (-2.0 * lumaM) + lumaWE;","/*--------------------------------------------------------------------------*/","    FxaaFloat lumaNESE = lumaNE + lumaSE;","    FxaaFloat lumaNWNE = lumaNW + lumaNE;","    FxaaFloat edgeHorz2 = (-2.0 * lumaE) + lumaNESE;","    FxaaFloat edgeVert2 = (-2.0 * lumaN) + lumaNWNE;","/*--------------------------------------------------------------------------*/","    FxaaFloat lumaNWSW = lumaNW + lumaSW;","    FxaaFloat lumaSWSE = lumaSW + lumaSE;","    FxaaFloat edgeHorz4 = (abs(edgeHorz1) * 2.0) + abs(edgeHorz2);","    FxaaFloat edgeVert4 = (abs(edgeVert1) * 2.0) + abs(edgeVert2);","    FxaaFloat edgeHorz3 = (-2.0 * lumaW) + lumaNWSW;","    FxaaFloat edgeVert3 = (-2.0 * lumaS) + lumaSWSE;","    FxaaFloat edgeHorz = abs(edgeHorz3) + edgeHorz4;","    FxaaFloat edgeVert = abs(edgeVert3) + edgeVert4;","/*--------------------------------------------------------------------------*/","    FxaaFloat subpixNWSWNESE = lumaNWSW + lumaNESE;","    FxaaFloat lengthSign = fxaaQualityRcpFrame.x;","    FxaaBool horzSpan = edgeHorz >= edgeVert;","    FxaaFloat subpixA = subpixNSWE * 2.0 + subpixNWSWNESE;","/*--------------------------------------------------------------------------*/","    if(!horzSpan) lumaN = lumaW;","    if(!horzSpan) lumaS = lumaE;","    if(horzSpan) lengthSign = fxaaQualityRcpFrame.y;","    FxaaFloat subpixB = (subpixA * (1.0/12.0)) - lumaM;","/*--------------------------------------------------------------------------*/","    FxaaFloat gradientN = lumaN - lumaM;","    FxaaFloat gradientS = lumaS - lumaM;","    FxaaFloat lumaNN = lumaN + lumaM;","    FxaaFloat lumaSS = lumaS + lumaM;","    FxaaBool pairN = abs(gradientN) >= abs(gradientS);","    FxaaFloat gradient = max(abs(gradientN), abs(gradientS));","    if(pairN) lengthSign = -lengthSign;","    FxaaFloat subpixC = FxaaSat(abs(subpixB) * subpixRcpRange);","/*--------------------------------------------------------------------------*/","    FxaaFloat2 posB;","    posB.x = posM.x;","    posB.y = posM.y;","    FxaaFloat2 offNP;","    offNP.x = (!horzSpan) ? 0.0 : fxaaQualityRcpFrame.x;","    offNP.y = ( horzSpan) ? 0.0 : fxaaQualityRcpFrame.y;","    if(!horzSpan) posB.x += lengthSign * 0.5;","    if( horzSpan) posB.y += lengthSign * 0.5;","/*--------------------------------------------------------------------------*/","    FxaaFloat2 posN;","    posN.x = posB.x - offNP.x * FXAA_QUALITY_P0;","    posN.y = posB.y - offNP.y * FXAA_QUALITY_P0;","    FxaaFloat2 posP;","    posP.x = posB.x + offNP.x * FXAA_QUALITY_P0;","    posP.y = posB.y + offNP.y * FXAA_QUALITY_P0;","    FxaaFloat subpixD = ((-2.0)*subpixC) + 3.0;","    FxaaFloat lumaEndN = FxaaLuma(FxaaTexTop(tex, posN));","    FxaaFloat subpixE = subpixC * subpixC;","    FxaaFloat lumaEndP = FxaaLuma(FxaaTexTop(tex, posP));","/*--------------------------------------------------------------------------*/","    if(!pairN) lumaNN = lumaSS;","    FxaaFloat gradientScaled = gradient * 1.0/4.0;","    FxaaFloat lumaMM = lumaM - lumaNN * 0.5;","    FxaaFloat subpixF = subpixD * subpixE;","    FxaaBool lumaMLTZero = lumaMM < 0.0;","/*--------------------------------------------------------------------------*/","    lumaEndN -= lumaNN * 0.5;","    lumaEndP -= lumaNN * 0.5;","    FxaaBool doneN = abs(lumaEndN) >= gradientScaled;","    FxaaBool doneP = abs(lumaEndP) >= gradientScaled;","    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P1;","    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P1;","    FxaaBool doneNP = (!doneN) || (!doneP);","    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P1;","    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P1;","/*--------------------------------------------------------------------------*/","    if(doneNP) {","        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","        doneN = abs(lumaEndN) >= gradientScaled;","        doneP = abs(lumaEndP) >= gradientScaled;","        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P2;","        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P2;","        doneNP = (!doneN) || (!doneP);","        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P2;","        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P2;","/*--------------------------------------------------------------------------*/","        #if (FXAA_QUALITY_PS > 3)","        if(doneNP) {","            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","            doneN = abs(lumaEndN) >= gradientScaled;","            doneP = abs(lumaEndP) >= gradientScaled;","            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P3;","            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P3;","            doneNP = (!doneN) || (!doneP);","            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P3;","            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P3;","/*--------------------------------------------------------------------------*/","            #if (FXAA_QUALITY_PS > 4)","            if(doneNP) {","                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","                doneN = abs(lumaEndN) >= gradientScaled;","                doneP = abs(lumaEndP) >= gradientScaled;","                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P4;","                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P4;","                doneNP = (!doneN) || (!doneP);","                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P4;","                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P4;","/*--------------------------------------------------------------------------*/","                #if (FXAA_QUALITY_PS > 5)","                if(doneNP) {","                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","                    doneN = abs(lumaEndN) >= gradientScaled;","                    doneP = abs(lumaEndP) >= gradientScaled;","                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P5;","                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P5;","                    doneNP = (!doneN) || (!doneP);","                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P5;","                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P5;","/*--------------------------------------------------------------------------*/","                    #if (FXAA_QUALITY_PS > 6)","                    if(doneNP) {","                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","                        doneN = abs(lumaEndN) >= gradientScaled;","                        doneP = abs(lumaEndP) >= gradientScaled;","                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P6;","                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P6;","                        doneNP = (!doneN) || (!doneP);","                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P6;","                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P6;","/*--------------------------------------------------------------------------*/","                        #if (FXAA_QUALITY_PS > 7)","                        if(doneNP) {","                            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","                            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","                            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","                            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","                            doneN = abs(lumaEndN) >= gradientScaled;","                            doneP = abs(lumaEndP) >= gradientScaled;","                            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P7;","                            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P7;","                            doneNP = (!doneN) || (!doneP);","                            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P7;","                            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P7;","/*--------------------------------------------------------------------------*/","    #if (FXAA_QUALITY_PS > 8)","    if(doneNP) {","        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","        doneN = abs(lumaEndN) >= gradientScaled;","        doneP = abs(lumaEndP) >= gradientScaled;","        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P8;","        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P8;","        doneNP = (!doneN) || (!doneP);","        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P8;","        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P8;","/*--------------------------------------------------------------------------*/","        #if (FXAA_QUALITY_PS > 9)","        if(doneNP) {","            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","            doneN = abs(lumaEndN) >= gradientScaled;","            doneP = abs(lumaEndP) >= gradientScaled;","            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P9;","            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P9;","            doneNP = (!doneN) || (!doneP);","            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P9;","            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P9;","/*--------------------------------------------------------------------------*/","            #if (FXAA_QUALITY_PS > 10)","            if(doneNP) {","                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","                doneN = abs(lumaEndN) >= gradientScaled;","                doneP = abs(lumaEndP) >= gradientScaled;","                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P10;","                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P10;","                doneNP = (!doneN) || (!doneP);","                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P10;","                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P10;","/*--------------------------------------------------------------------------*/","                #if (FXAA_QUALITY_PS > 11)","                if(doneNP) {","                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","                    doneN = abs(lumaEndN) >= gradientScaled;","                    doneP = abs(lumaEndP) >= gradientScaled;","                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P11;","                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P11;","                    doneNP = (!doneN) || (!doneP);","                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P11;","                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P11;","/*--------------------------------------------------------------------------*/","                    #if (FXAA_QUALITY_PS > 12)","                    if(doneNP) {","                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","                        doneN = abs(lumaEndN) >= gradientScaled;","                        doneP = abs(lumaEndP) >= gradientScaled;","                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P12;","                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P12;","                        doneNP = (!doneN) || (!doneP);","                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P12;","                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P12;","/*--------------------------------------------------------------------------*/","                    }","                    #endif","/*--------------------------------------------------------------------------*/","                }","                #endif","/*--------------------------------------------------------------------------*/","            }","            #endif","/*--------------------------------------------------------------------------*/","        }","        #endif","/*--------------------------------------------------------------------------*/","    }","    #endif","/*--------------------------------------------------------------------------*/","                        }","                        #endif","/*--------------------------------------------------------------------------*/","                    }","                    #endif","/*--------------------------------------------------------------------------*/","                }","                #endif","/*--------------------------------------------------------------------------*/","            }","            #endif","/*--------------------------------------------------------------------------*/","        }","        #endif","/*--------------------------------------------------------------------------*/","    }","/*--------------------------------------------------------------------------*/","    FxaaFloat dstN = posM.x - posN.x;","    FxaaFloat dstP = posP.x - posM.x;","    if(!horzSpan) dstN = posM.y - posN.y;","    if(!horzSpan) dstP = posP.y - posM.y;","/*--------------------------------------------------------------------------*/","    FxaaBool goodSpanN = (lumaEndN < 0.0) != lumaMLTZero;","    FxaaFloat spanLength = (dstP + dstN);","    FxaaBool goodSpanP = (lumaEndP < 0.0) != lumaMLTZero;","    FxaaFloat spanLengthRcp = 1.0/spanLength;","/*--------------------------------------------------------------------------*/","    FxaaBool directionN = dstN < dstP;","    FxaaFloat dst = min(dstN, dstP);","    FxaaBool goodSpan = directionN ? goodSpanN : goodSpanP;","    FxaaFloat subpixG = subpixF * subpixF;","    FxaaFloat pixelOffset = (dst * (-spanLengthRcp)) + 0.5;","    FxaaFloat subpixH = subpixG * fxaaQualitySubpix;","/*--------------------------------------------------------------------------*/","    FxaaFloat pixelOffsetGood = goodSpan ? pixelOffset : 0.0;","    FxaaFloat pixelOffsetSubpix = max(pixelOffsetGood, subpixH);","    if(!horzSpan) posM.x += pixelOffsetSubpix * lengthSign;","    if( horzSpan) posM.y += pixelOffsetSubpix * lengthSign;","    #if (FXAA_DISCARD == 1)","        return FxaaTexTop(tex, posM);","    #else","        return FxaaFloat4(FxaaTexTop(tex, posM).xyz, lumaM);","    #endif","}","/*==========================================================================*/","#endif","","void main() {","  gl_FragColor = FxaaPixelShader(","    vUv,","    vec4(0.0),","    tDiffuse,","    tDiffuse,","    tDiffuse,","    resolution,","    vec4(0.0),","    vec4(0.0),","    vec4(0.0),","    0.75,","    0.166,","    0.0833,","    0.0,","    0.0,","    0.0,","    vec4(0.0)","  );","","  // TODO avoid querying texture twice for same texel","  gl_FragColor.a = texture2D(tDiffuse, vUv).a;","}"].join("\n")}},function(e,t){THREE.LuminosityHighPassShader={shaderID:"luminosityHighPass",uniforms:{tDiffuse:{type:"t",value:null},luminosityThreshold:{type:"f",value:1},smoothWidth:{type:"f",value:1},defaultColor:{type:"c",value:new THREE.Color(0)},defaultOpacity:{type:"f",value:0}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform vec3 defaultColor;","uniform float defaultOpacity;","uniform float luminosityThreshold;","uniform float smoothWidth;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","vec3 luma = vec3( 0.299, 0.587, 0.114 );","float v = dot( texel.xyz, luma );","vec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );","float alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );","gl_FragColor = mix( outputColor, texel, alpha );","}"].join("\n")}},function(e,t){THREE.RenderPass=function(e,t,a,r,i){THREE.Pass.call(this),this.scene=e,this.camera=t,this.overrideMaterial=a,this.clearColor=r,this.clearAlpha=void 0!==i?i:0,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1},THREE.RenderPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.RenderPass,render:function(e,t,a){var r,i,n=e.autoClear;e.autoClear=!1,this.scene.overrideMaterial=this.overrideMaterial,this.clearColor&&(r=e.getClearColor().getHex(),i=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),this.clearDepth&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:a),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor&&e.setClearColor(r,i),this.scene.overrideMaterial=null,e.autoClear=n}})},function(e,t){THREE.ShaderPass=function(e,t){THREE.Pass.call(this),this.textureID=void 0!==t?t:"tDiffuse",e instanceof THREE.ShaderMaterial?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=THREE.UniformsUtils.clone(e.uniforms),this.material=new THREE.ShaderMaterial({defines:e.defines||{},uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new THREE.Scene,this.quad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),null),this.quad.frustumCulled=!1,this.scene.add(this.quad)},THREE.ShaderPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.ShaderPass,render:function(e,t,a,r,i){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=a.texture),this.quad.material=this.material,this.renderToScreen?e.render(this.scene,this.camera):e.render(this.scene,this.camera,t,this.clear)}})},function(e,t){THREE.UnrealBloomPass=function(e,t,a,r){THREE.Pass.call(this),this.strength=void 0!==t?t:1,this.radius=a,this.threshold=r,this.resolution=void 0!==e?new THREE.Vector2(e.x,e.y):new THREE.Vector2(256,256),this.clearColor=new THREE.Color(0,0,0);var i={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat};this.renderTargetsHorizontal=[],this.renderTargetsVertical=[],this.nMips=5;var n=Math.round(this.resolution.x/2),o=Math.round(this.resolution.y/2);this.renderTargetBright=new THREE.WebGLRenderTarget(n,o,i),this.renderTargetBright.texture.name="UnrealBloomPass.bright",this.renderTargetBright.texture.generateMipmaps=!1;for(var s=0;s<this.nMips;s++){var l=new THREE.WebGLRenderTarget(n,o,i);l.texture.name="UnrealBloomPass.h"+s,l.texture.generateMipmaps=!1,this.renderTargetsHorizontal.push(l);var u=new THREE.WebGLRenderTarget(n,o,i);u.texture.name="UnrealBloomPass.v"+s,u.texture.generateMipmaps=!1,this.renderTargetsVertical.push(u),n=Math.round(n/2),o=Math.round(o/2)}void 0===THREE.LuminosityHighPassShader&&console.error("THREE.UnrealBloomPass relies on THREE.LuminosityHighPassShader");var f=THREE.LuminosityHighPassShader;this.highPassUniforms=THREE.UniformsUtils.clone(f.uniforms),this.highPassUniforms.luminosityThreshold.value=r,this.highPassUniforms.smoothWidth.value=.01,this.materialHighPassFilter=new THREE.ShaderMaterial({uniforms:this.highPassUniforms,vertexShader:f.vertexShader,fragmentShader:f.fragmentShader,defines:{}}),this.separableBlurMaterials=[];var d=[3,5,7,9,11];for(n=Math.round(this.resolution.x/2),o=Math.round(this.resolution.y/2),s=0;s<this.nMips;s++)this.separableBlurMaterials.push(this.getSeperableBlurMaterial(d[s])),this.separableBlurMaterials[s].uniforms.texSize.value=new THREE.Vector2(n,o),n=Math.round(n/2),o=Math.round(o/2);this.compositeMaterial=this.getCompositeMaterial(this.nMips),this.compositeMaterial.uniforms.blurTexture1.value=this.renderTargetsVertical[0].texture,this.compositeMaterial.uniforms.blurTexture2.value=this.renderTargetsVertical[1].texture,this.compositeMaterial.uniforms.blurTexture3.value=this.renderTargetsVertical[2].texture,this.compositeMaterial.uniforms.blurTexture4.value=this.renderTargetsVertical[3].texture,this.compositeMaterial.uniforms.blurTexture5.value=this.renderTargetsVertical[4].texture,this.compositeMaterial.uniforms.bloomStrength.value=t,this.compositeMaterial.uniforms.bloomRadius.value=.1,this.compositeMaterial.needsUpdate=!0;this.compositeMaterial.uniforms.bloomFactors.value=[1,.8,.6,.4,.2],this.bloomTintColors=[new THREE.Vector3(1,1,1),new THREE.Vector3(1,1,1),new THREE.Vector3(1,1,1),new THREE.Vector3(1,1,1),new THREE.Vector3(1,1,1)],this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,void 0===THREE.CopyShader&&console.error("THREE.UnrealBloomPass relies on THREE.CopyShader");var h=THREE.CopyShader;this.copyUniforms=THREE.UniformsUtils.clone(h.uniforms),this.copyUniforms.opacity.value=1,this.materialCopy=new THREE.ShaderMaterial({uniforms:this.copyUniforms,vertexShader:h.vertexShader,fragmentShader:h.fragmentShader,blending:THREE.AdditiveBlending,depthTest:!1,depthWrite:!1,transparent:!0}),this.enabled=!0,this.needsSwap=!1,this.oldClearColor=new THREE.Color,this.oldClearAlpha=1,this.basic=new THREE.MeshBasicMaterial,this.fsQuad=new THREE.Pass.FullScreenQuad(null)},THREE.UnrealBloomPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.UnrealBloomPass,dispose:function(){for(var e=0;e<this.renderTargetsHorizontal.length;e++)this.renderTargetsHorizontal[e].dispose();for(e=0;e<this.renderTargetsVertical.length;e++)this.renderTargetsVertical[e].dispose();this.renderTargetBright.dispose()},setSize:function(e,t){var a=Math.round(e/2),r=Math.round(t/2);this.renderTargetBright.setSize(a,r);for(var i=0;i<this.nMips;i++)this.renderTargetsHorizontal[i].setSize(a,r),this.renderTargetsVertical[i].setSize(a,r),this.separableBlurMaterials[i].uniforms.texSize.value=new THREE.Vector2(a,r),a=Math.round(a/2),r=Math.round(r/2)},render:function(e,t,a,r,i){this.oldClearColor.copy(e.getClearColor()),this.oldClearAlpha=e.getClearAlpha();var n=e.autoClear;e.autoClear=!1,e.setClearColor(this.clearColor,0),i&&e.context.disable(e.context.STENCIL_TEST),this.renderToScreen&&(this.fsQuad.material=this.basic,this.basic.map=a.texture,e.setRenderTarget(null),e.clear(),this.fsQuad.render(e)),this.highPassUniforms.tDiffuse.value=a.texture,this.highPassUniforms.luminosityThreshold.value=this.threshold,this.fsQuad.material=this.materialHighPassFilter,e.setRenderTarget(this.renderTargetBright),e.clear(),this.fsQuad.render(e);for(var o=this.renderTargetBright,s=0;s<this.nMips;s++)this.fsQuad.material=this.separableBlurMaterials[s],this.separableBlurMaterials[s].uniforms.colorTexture.value=o.texture,this.separableBlurMaterials[s].uniforms.direction.value=THREE.UnrealBloomPass.BlurDirectionX,e.setRenderTarget(this.renderTargetsHorizontal[s]),e.clear(),this.fsQuad.render(e),this.separableBlurMaterials[s].uniforms.colorTexture.value=this.renderTargetsHorizontal[s].texture,this.separableBlurMaterials[s].uniforms.direction.value=THREE.UnrealBloomPass.BlurDirectionY,e.setRenderTarget(this.renderTargetsVertical[s]),e.clear(),this.fsQuad.render(e),o=this.renderTargetsVertical[s];this.fsQuad.material=this.compositeMaterial,this.compositeMaterial.uniforms.bloomStrength.value=this.strength,this.compositeMaterial.uniforms.bloomRadius.value=this.radius,this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,e.setRenderTarget(this.renderTargetsHorizontal[0]),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetsHorizontal[0].texture,i&&e.context.enable(e.context.STENCIL_TEST),this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(a),this.fsQuad.render(e)),e.setClearColor(this.oldClearColor,this.oldClearAlpha),e.autoClear=n},getSeperableBlurMaterial:function(e){return new THREE.ShaderMaterial({defines:{KERNEL_RADIUS:e,SIGMA:e},uniforms:{colorTexture:{value:null},texSize:{value:new THREE.Vector2(.5,.5)},direction:{value:new THREE.Vector2(.5,.5)}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"#include <common>\t\t\t\tvarying vec2 vUv;\n\t\t\t\tuniform sampler2D colorTexture;\n\t\t\t\tuniform vec2 texSize;\t\t\t\tuniform vec2 direction;\t\t\t\t\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\t\t\t\t}\t\t\t\tvoid main() {\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\t\t\t\t\tfloat fSigma = float(SIGMA);\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, fSigma);\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\t\t\t\t\t\tfloat x = float(i);\t\t\t\t\t\tfloat w = gaussianPdf(x, fSigma);\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\t\t\t\t\t\tweightSum += 2.0 * w;\t\t\t\t\t}\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\n\t\t\t\t}"})},getCompositeMaterial:function(e){return new THREE.ShaderMaterial({defines:{NUM_MIPS:e},uniforms:{blurTexture1:{value:null},blurTexture2:{value:null},blurTexture3:{value:null},blurTexture4:{value:null},blurTexture5:{value:null},dirtTexture:{value:null},bloomStrength:{value:1},bloomFactors:{value:null},bloomTintColors:{value:null},bloomRadius:{value:0}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"varying vec2 vUv;\t\t\t\tuniform sampler2D blurTexture1;\t\t\t\tuniform sampler2D blurTexture2;\t\t\t\tuniform sampler2D blurTexture3;\t\t\t\tuniform sampler2D blurTexture4;\t\t\t\tuniform sampler2D blurTexture5;\t\t\t\tuniform sampler2D dirtTexture;\t\t\t\tuniform float bloomStrength;\t\t\t\tuniform float bloomRadius;\t\t\t\tuniform float bloomFactors[NUM_MIPS];\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\t\t\t\t\t\t\t\tfloat lerpBloomFactor(const in float factor) { \t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\t\t\t\t}\t\t\t\t\t\t\t\tvoid main() {\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\t\t\t\t}"})}}),THREE.UnrealBloomPass.BlurDirectionX=new THREE.Vector2(1,0),THREE.UnrealBloomPass.BlurDirectionY=new THREE.Vector2(0,1)},function(e,t){THREE.BloomLite=function(e,t,a,r){THREE.Pass.call(this),this.strength=void 0!==t?t:1,this.radius=a,this.threshold=r,this.resolution=void 0!==e?new THREE.Vector2(e.x,e.y):new THREE.Vector2(256,256),this.clearColor=new THREE.Color(0,0,0);var i={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat};this.renderTargetsHorizontal=[],this.renderTargetsVertical=[],this.nMips=3;var n=Math.round(this.resolution.x/2),o=Math.round(this.resolution.y/2);this.renderTargetBright=new THREE.WebGLRenderTarget(n,o,i),this.renderTargetBright.texture.name="BloomLite.bright",this.renderTargetBright.texture.generateMipmaps=!1;for(var s=0;s<this.nMips;s++){var l=new THREE.WebGLRenderTarget(n,o,i);l.texture.name="BloomLite.h"+s,l.texture.generateMipmaps=!1,this.renderTargetsHorizontal.push(l);var u=new THREE.WebGLRenderTarget(n,o,i);u.texture.name="BloomLite.v"+s,u.texture.generateMipmaps=!1,this.renderTargetsVertical.push(u),n=Math.round(n/2),o=Math.round(o/2)}void 0===THREE.LuminosityHighPassShader&&console.error("THREE.BloomLite relies on THREE.LuminosityHighPassShader");var f=THREE.LuminosityHighPassShader;this.highPassUniforms=THREE.UniformsUtils.clone(f.uniforms),this.highPassUniforms.luminosityThreshold.value=r,this.highPassUniforms.smoothWidth.value=.01,this.materialHighPassFilter=new THREE.ShaderMaterial({uniforms:this.highPassUniforms,vertexShader:f.vertexShader,fragmentShader:f.fragmentShader,defines:{}}),this.separableBlurMaterials=[];var d=[3,5,7,9,11];for(n=Math.round(this.resolution.x/2),o=Math.round(this.resolution.y/2),s=0;s<this.nMips;s++)this.separableBlurMaterials.push(this.getSeperableBlurMaterial(d[s])),this.separableBlurMaterials[s].uniforms.texSize.value=new THREE.Vector2(n,o),n=Math.round(n/2),o=Math.round(o/2);this.compositeMaterial=this.getCompositeMaterial(this.nMips),this.compositeMaterial.uniforms.blurTexture1.value=this.renderTargetsVertical[0].texture,this.compositeMaterial.uniforms.blurTexture2.value=this.renderTargetsVertical[1].texture,this.compositeMaterial.uniforms.blurTexture3.value=this.renderTargetsVertical[2].texture,this.compositeMaterial.uniforms.bloomStrength.value=t,this.compositeMaterial.uniforms.bloomRadius.value=.1,this.compositeMaterial.needsUpdate=!0,void 0===THREE.CopyShader&&console.error("THREE.BloomLite relies on THREE.CopyShader");var h=THREE.CopyShader;this.copyUniforms=THREE.UniformsUtils.clone(h.uniforms),this.copyUniforms.opacity.value=1,this.materialCopy=new THREE.ShaderMaterial({uniforms:this.copyUniforms,vertexShader:h.vertexShader,fragmentShader:h.fragmentShader,blending:THREE.AdditiveBlending,depthTest:!1,depthWrite:!1,transparent:!0}),this.enabled=!0,this.needsSwap=!1,this.oldClearColor=new THREE.Color,this.oldClearAlpha=1,this.basic=new THREE.MeshBasicMaterial,this.fsQuad=new THREE.Pass.FullScreenQuad(null)},THREE.BloomLite.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.BloomLite,dispose:function(){for(var e=0;e<this.renderTargetsHorizontal.length;e++)this.renderTargetsHorizontal[e].dispose();for(e=0;e<this.renderTargetsVertical.length;e++)this.renderTargetsVertical[e].dispose();this.renderTargetBright.dispose()},setSize:function(e,t){var a=Math.round(e/2),r=Math.round(t/2);this.renderTargetBright.setSize(a,r);for(var i=0;i<this.nMips;i++)this.renderTargetsHorizontal[i].setSize(a,r),this.renderTargetsVertical[i].setSize(a,r),this.separableBlurMaterials[i].uniforms.texSize.value=new THREE.Vector2(a,r),a=Math.round(a/2),r=Math.round(r/2)},render:function(e,t,a,r,i){this.oldClearColor.copy(e.getClearColor()),this.oldClearAlpha=e.getClearAlpha();var n=e.autoClear;e.autoClear=!1,e.setClearColor(this.clearColor,0),i&&e.context.disable(e.context.STENCIL_TEST),this.renderToScreen&&(this.fsQuad.material=this.basic,this.basic.map=a.texture,e.setRenderTarget(null),e.clear(),this.fsQuad.render(e)),this.highPassUniforms.tDiffuse.value=a.texture,this.highPassUniforms.luminosityThreshold.value=this.threshold,this.fsQuad.material=this.materialHighPassFilter,e.setRenderTarget(this.renderTargetBright),e.clear(),this.fsQuad.render(e);for(var o=this.renderTargetBright,s=0;s<this.nMips;s++)this.fsQuad.material=this.separableBlurMaterials[s],this.separableBlurMaterials[s].uniforms.colorTexture.value=o.texture,this.separableBlurMaterials[s].uniforms.direction.value=THREE.BloomLite.BlurDirectionX,e.setRenderTarget(this.renderTargetsHorizontal[s]),e.clear(),this.fsQuad.render(e),this.separableBlurMaterials[s].uniforms.colorTexture.value=this.renderTargetsHorizontal[s].texture,this.separableBlurMaterials[s].uniforms.direction.value=THREE.BloomLite.BlurDirectionY,e.setRenderTarget(this.renderTargetsVertical[s]),e.clear(),this.fsQuad.render(e),o=this.renderTargetsVertical[s];this.fsQuad.material=this.compositeMaterial,this.compositeMaterial.uniforms.bloomStrength.value=this.strength,this.compositeMaterial.uniforms.bloomRadius.value=this.radius,e.setRenderTarget(this.renderTargetsHorizontal[0]),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetsHorizontal[0].texture,i&&e.context.enable(e.context.STENCIL_TEST),e.setRenderTarget(this.renderToScreen?null:a),this.fsQuad.render(e),e.setClearColor(this.oldClearColor,this.oldClearAlpha),e.autoClear=n},getSeperableBlurMaterial:function(e){return new THREE.ShaderMaterial({defines:{KERNEL_RADIUS:e,SIGMA:e},uniforms:{colorTexture:{value:null},texSize:{value:new THREE.Vector2(.5,.5)},direction:{value:new THREE.Vector2(.5,.5)}},vertexShader:"\n        varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\t\t\t\t}",fragmentShader:"\n        #include <common>\n\t\t\t\tvarying vec2 vUv;\n\t\t\t\tuniform sampler2D colorTexture;\n\t\t\t\tuniform vec2 texSize;\n\t\t\t\tuniform vec2 direction;\n\n\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\n\t\t\t\t\treturn 0.39894 * exp(-0.5 * x * x/(sigma * sigma))/sigma;\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\n\t\t\t\t\tfloat fSigma = float(SIGMA);\n\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, fSigma);\n\t\t\t\t\tvec3 diffuseSum = texture2D(colorTexture, vUv).rgb * weightSum;\n\n\t\t\t\t\tfor(int i = 1; i < KERNEL_RADIUS; i ++) {\n\t\t\t\t\t\tfloat x = float(i);\n\t\t\t\t\t\tfloat w = gaussianPdf(x, fSigma);\n\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\n\t\t\t\t\t\tvec3 sample1 = texture2D(colorTexture, vUv + uvOffset).rgb;\n\t\t\t\t\t\tvec3 sample2 = texture2D(colorTexture, vUv - uvOffset).rgb;\n\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\n\t\t\t\t\t\tweightSum += 2.0 * w;\n\t\t\t\t\t}\n\n\t\t\t\t\tgl_FragColor = vec4(diffuseSum / weightSum, 1.0);\n\t\t\t\t}"})},getCompositeMaterial:function(e){return new THREE.ShaderMaterial({defines:{NUM_MIPS:e},uniforms:{blurTexture1:{value:null},blurTexture2:{value:null},blurTexture3:{value:null},bloomStrength:{value:1},bloomRadius:{value:0}},vertexShader:"\n\t\t\t\tvarying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\t\t\t\t}",fragmentShader:"\n\t\t\t\tvarying vec2 vUv;\n\t\t\t\tuniform sampler2D blurTexture1;\n\t\t\t\tuniform sampler2D blurTexture2;\n\t\t\t\tuniform sampler2D blurTexture3;\n\t\t\t\tuniform float bloomStrength;\n\t\t\t\tuniform float bloomRadius;\n\n\t\t\t\tvoid main() {\n          vec4 c = vec4(1.0, 1.0, 1.0, 1.0);\n\t\t\t\t\tgl_FragColor = bloomStrength * (\n            c * texture2D(blurTexture1, vUv) +\n            c * texture2D(blurTexture2, vUv) +\n\t\t\t\t\t  0.5 * c * texture2D(blurTexture3, vUv)\n         );\n\t\t\t\t}"})}}),THREE.BloomLite.BlurDirectionX=new THREE.Vector2(1,0),THREE.BloomLite.BlurDirectionY=new THREE.Vector2(0,1)},function(e,t){THREE.PosterShader={uniforms:{tDiffuse:{value:null}},vertexShader:"\n    varying vec2 vUv;\n\n    void main() {\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n  ",fragmentShader:"\n    #define PI 3.14159\n    #define UV_SCALE 0.02\n    #define MAX_HEIGHT 0.5\n    varying vec2 vUv;\n    uniform sampler2D tDiffuse;\n\n    float posterise(float val, float amount) {\n      return floor(val * amount) / amount;\n    }\n\n    float posteriseCeil(float val, float amount) {\n      return ceil(val * amount) / amount;\n    }\n\n    void main() {\n      vec4 frag = texture2D(tDiffuse, vUv);\n      frag.r = posterise(frag.r, 16.0);\n      gl_FragColor = frag;\n    }\n  "},THREE.PosterPass=function(e){THREE.Pass.call(this),this.size=e,this.shader=THREE.PosterShader,this.material=new THREE.ShaderMaterial(this.shader),this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new THREE.Scene,this.quad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),this.material),this.quad.frustumCulled=!1,this.scene.add(this.quad),this.time=0},THREE.PosterPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.PosterPass,render:function(e,t,a,r,i){this.shader.uniforms.tDiffuse.value=a.texture,this.renderToScreen?(e.setRenderTarget(null),e.clear(),e.render(this.scene,this.camera)):(e.setRenderTarget(t),e.clear(),e.render(this.scene,this.camera))}})},function(e,t){function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}!function(){function e(e){var t,a=e.properties.Content,r=e.properties.RelativeFilename||e.properties.Filename,i=r.slice(r.lastIndexOf(".")+1).toLowerCase();switch(i){case"bmp":t="image/bmp";break;case"jpg":case"jpeg":t="image/jpeg";break;case"png":t="image/png";break;case"tif":t="image/tiff";break;default:return void console.warn('FBXLoader: Image type "'+i+'" is not supported.')}if("string"==typeof a)return"data:"+t+";base64,"+a;var n=new Uint8Array(a);return window.URL.createObjectURL(new Blob([n],{type:t}))}function t(e,t,a,r){var i,n=e.id,o=e.attrName,s=e.properties.FileName,l=e.properties.RelativeFilename,u=r.get(n).children;if(void 0!==u&&u.length>0&&a.has(u[0].ID))i=a.get(u[0].ID);else if(void 0!==l&&"/"!==l[0]&&null===l.match(/^[a-zA-Z]:/))i=l;else{var f=s.split(/[\\\/]/);i=f.length>0?f[f.length-1]:s}var d=t.path;0!==i.indexOf("blob:")&&0!==i.indexOf("data:")||t.setPath(void 0);var h=t.load(i);h.name=o,h.FBX_ID=n;var p=e.properties.WrapModeU,c=e.properties.WrapModeV,m=void 0!==p?p.value:0,v=void 0!==c?c.value:0;if(h.wrapS=0===m?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,h.wrapT=0===v?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,"Scaling"in e.properties){var g=e.properties.Scaling.value;h.repeat.x=g[0],h.repeat.y=g[1]}return t.setPath(d),h}function r(e,t,r){var i=e.id,n=e.attrName,o=e.properties.ShadingModel;if("object"===a(o)&&(o=o.value),!r.has(i))return null;var s,l=r.get(i).children,u=function(e,t,a){var r={};e.BumpFactor&&(r.bumpScale=e.BumpFactor.value);e.Diffuse&&(r.color=L(e.Diffuse));e.DisplacementFactor&&(r.displacementScale=e.DisplacementFactor.value);e.ReflectionFactor&&(r.reflectivity=e.ReflectionFactor.value);e.Specular&&(r.specular=L(e.Specular));e.Shininess&&(r.shininess=e.Shininess.value);e.Emissive&&(r.emissive=L(e.Emissive));e.EmissiveFactor&&(r.emissiveIntensity=parseFloat(e.EmissiveFactor.value));e.Opacity&&(r.opacity=parseFloat(e.Opacity.value));r.opacity<1&&(r.transparent=!0);if(e["Maya|base_color"]){var i=e["Maya|base_color"].value;r.color=new THREE.Color(i[0],i[1],i[2])}if(e["Maya|emissive"]){i=e["Maya|emissive"];r.emissive=new THREE.Color(i[0],i[1],i[2])}e["Maya|emissive_intensity"]&&(r.emissiveIntensity=e["Maya|emissive_intensity"].value);e["Maya|metallic"]&&(r.metalness=e["Maya|metallic"].value);e["Maya|roughness"]&&(r.roughness=e["Maya|roughness"].value);var n=1;if(e["Maya|uv_scale"])n=e["Maya|uv_scale"].value;for(var o=0,s=a.length;o<s;++o){var l=a[o],u=l.relationship;switch(u){case"Maya|TEX_color_map":e[f="Maya|use_color_map"]&&1==e[f].value&&(r.map=t.get(l.ID),1!=n&&(r.map.wrapS=THREE.RepeatWrapping,r.map.wrapT=THREE.RepeatWrapping,r.map.repeat.set(n,n)));break;case"Maya|TEX_emissive_map":e[f="Maya|use_emissive_map"]&&1==e[f].value&&(r.emissiveMap=t.get(l.ID),1!=n&&(r.emissiveMap.wrapS=THREE.RepeatWrapping,r.emissiveMap.wrapT=THREE.RepeatWrapping,r.emissiveMap.repeat.set(n,n)));break;case"Maya|TEX_roughness_map":e[f="Maya|use_roughness_map"]&&1==e[f].value&&(r.roughnessMap=t.get(l.ID),1!=n&&(r.roughnessMap.wrapS=THREE.RepeatWrapping,r.roughnessMap.wrapT=THREE.RepeatWrapping,r.roughnessMap.repeat.set(n,n)));break;case"Maya|TEX_normal_map":e[f="Maya|use_normal_map"]&&1==e[f].value&&(r.normalMap=t.get(l.ID),1!=n&&(r.normalMap.wrapS=THREE.RepeatWrapping,r.normalMap.wrapT=THREE.RepeatWrapping,r.normalMap.repeat.set(n,n)));break;case"Maya|TEX_metallic_map":e[f="Maya|use_metallic_map"]&&1==e[f].value&&(r.metalnessMap=t.get(l.ID),1!=n&&(r.metalnessMap.wrapS=THREE.RepeatWrapping,r.metalnessMap.wrapT=THREE.RepeatWrapping,r.metalnessMap.repeat.set(n,n)));break;case"Maya|TEX_ao_map":var f;e[f="Maya|use_ao_map"]&&1==e[f].value&&(r.aoMap=t.get(l.ID),1!=n&&(r.aoMap.wrapS=THREE.RepeatWrapping,r.aoMap.wrapT=THREE.RepeatWrapping,r.aoMap.repeat.set(n,n)));break;case"Maya|TEX_brdf_lut":case"Maya|TEX_global_specular_cube":case"Maya|TEX_global_diffuse_cube":break;case"Bump":r.bumpMap=t.get(l.ID);break;case"DiffuseColor":r.map=t.get(l.ID);break;case"DisplacementColor":r.displacementMap=t.get(l.ID);break;case"EmissiveColor":r.emissiveMap=t.get(l.ID);break;case"NormalMap":r.normalMap=t.get(l.ID);break;case"ReflectionColor":r.envMap=t.get(l.ID),r.envMap.mapping=THREE.EquirectangularReflectionMapping;break;case"SpecularColor":r.specularMap=t.get(l.ID);break;case"TransparentColor":r.alphaMap=t.get(l.ID),r.transparent=!0;break;case"AmbientColor":case"ShininessExponent":case"SpecularFactor":case"VectorDisplacementColor":default:console.warn("THREE.FBXLoader: %s map is not supported in three.js, skipping texture.",u)}}return r}(e.properties,t,l);switch(o.toLowerCase()){case"phong":s=new THREE.MeshPhongMaterial;break;case"lambert":s=new THREE.MeshLambertMaterial;break;case"unknown":s=new THREE.MeshStandardMaterial;break;default:console.warn('THREE.FBXLoader: unknown material type "%s". Defaulting to MeshPhongMaterial.',o),s=new THREE.MeshPhongMaterial({color:3342591})}return s.setValues(u),s.name=n,s}function i(e,t){for(var a={},r=e.children,i=0,n=r.length;i<n;++i){var o=r[i],s=t[o.ID],l={FBX_ID:o.ID,index:i,indices:[],weights:[],transform:(new THREE.Matrix4).fromArray(s.subNodes.Transform.properties.a),transformLink:(new THREE.Matrix4).fromArray(s.subNodes.TransformLink.properties.a),linkMode:s.properties.Mode};"Indexes"in s.subNodes&&(l.indices=s.subNodes.Indexes.properties.a,l.weights=s.subNodes.Weights.properties.a),a[o.ID]=l}return{map:a,bones:[]}}function n(e,t,a){switch(e.attrType){case"Mesh":return function(e,t,a){for(var r=0;r<t.children.length;++r){var i=a[t.children[r].ID];if(void 0!==i)break}return function(e,t){var a=e.subNodes,r=a.Vertices.properties.a,i=a.PolygonVertexIndex.properties.a,n=[],s=[],l=[],f=[],d=[],h=[],p=[];if(a.LayerElementColor)var c=function(e){var t=e.properties.MappingInformationType,a=e.properties.ReferenceInformationType,r=e.subNodes.Colors.properties.a,i=[];"IndexToDirect"===a&&(i=e.subNodes.ColorIndex.properties.a);return{dataSize:4,buffer:r,indices:i,mappingType:t,referenceType:a}}(a.LayerElementColor[0]);if(a.LayerElementMaterial)var m=function(e){var t=e.properties.MappingInformationType,a=e.properties.ReferenceInformationType;if("NoMappingInformation"===t)return{dataSize:1,buffer:[0],indices:[0],mappingType:"AllSame",referenceType:a};for(var r=e.subNodes.Materials.properties.a,i=[],n=0,o=r.length;n<o;++n)i.push(n);return{dataSize:1,buffer:r,indices:i,mappingType:t,referenceType:a}}(a.LayerElementMaterial[0]);if(a.LayerElementNormal)var v=function(e){var t=e.properties.MappingInformationType,a=e.properties.ReferenceInformationType,r=e.subNodes.Normals.properties.a,i=[];"IndexToDirect"===a&&("NormalIndex"in e.subNodes?i=e.subNodes.NormalIndex.properties.a:"NormalsIndex"in e.subNodes&&(i=e.subNodes.NormalsIndex.properties.a));return{dataSize:3,buffer:r,indices:i,mappingType:t,referenceType:a}}(a.LayerElementNormal[0]);if(a.LayerElementUV)for(var g=[],A=0;a.LayerElementUV[A];)g.push(o(a.LayerElementUV[A])),A++;var T={};if(t){var x=t.map;for(var E in x)for(var F=x[E],y=F.indices,_=0;_<y.length;_++){var b=y[_],P=F.weights[_];void 0===T[b]&&(T[b]=[]),T[b].push({id:F.index,weight:P})}}for(var S=0,L=0,R=!1,N=[],I=[],w=[],M=[],H=[],U=[],X=0;X<i.length;X++){var C=i[X],O=!1;C<0&&(C^=-1,i[X]=C,O=!0);var Q=[],D=[];if(N.push(3*C,3*C+1,3*C+2),c){var Y=u(X,S,C,c);w.push(Y[0],Y[1],Y[2])}if(t){if(void 0!==T[C])for(var B=T[C],k=(_=0,B.length);_<k;_++)D.push(B[_].weight),Q.push(B[_].id);if(D.length>4){R||(console.warn("THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights."),R=!0);var z=[0,0,0,0],j=[0,0,0,0];D.forEach((function(e,t){var a=e,r=Q[t];j.forEach((function(e,t,i){if(a>e){i[t]=a,a=e;var n=z[t];z[t]=r,r=n}}))})),Q=z,D=j}for(A=D.length;A<4;++A)D[A]=0,Q[A]=0;for(A=0;A<4;++A)H.push(D[A]),U.push(Q[A])}if(v){Y=u(X,S,C,v);I.push(Y[0],Y[1],Y[2])}if(g)for(A=0;A<g.length;A++){Y=u(X,S,C,g[A]);void 0===M[A]&&(M[A]=[]),M[A].push(Y[0],Y[1])}if(L++,O){for(A=2;A<L;A++)n.push(r[N[0]]),n.push(r[N[1]]),n.push(r[N[2]]),n.push(r[N[3*(A-1)]]),n.push(r[N[3*(A-1)+1]]),n.push(r[N[3*(A-1)+2]]),n.push(r[N[3*A]]),n.push(r[N[3*A+1]]),n.push(r[N[3*A+2]]);if(t)for(A=2;A<L;A++)h.push(H[0]),h.push(H[1]),h.push(H[2]),h.push(H[3]),h.push(H[4*(A-1)]),h.push(H[4*(A-1)+1]),h.push(H[4*(A-1)+2]),h.push(H[4*(A-1)+3]),h.push(H[4*A]),h.push(H[4*A+1]),h.push(H[4*A+2]),h.push(H[4*A+3]),p.push(U[0]),p.push(U[1]),p.push(U[2]),p.push(U[3]),p.push(U[4*(A-1)]),p.push(U[4*(A-1)+1]),p.push(U[4*(A-1)+2]),p.push(U[4*(A-1)+3]),p.push(U[4*A]),p.push(U[4*A+1]),p.push(U[4*A+2]),p.push(U[4*A+3]);if(v)for(A=2;A<L;A++)s.push(I[0]),s.push(I[1]),s.push(I[2]),s.push(I[3*(A-1)]),s.push(I[3*(A-1)+1]),s.push(I[3*(A-1)+2]),s.push(I[3*A]),s.push(I[3*A+1]),s.push(I[3*A+2]);if(g)for(_=0;_<g.length;_++){void 0===f[_]&&(f[_]=[]);for(A=2;A<L;A++)f[_].push(M[_][0]),f[_].push(M[_][1]),f[_].push(M[_][2*(A-1)]),f[_].push(M[_][2*(A-1)+1]),f[_].push(M[_][2*A]),f[_].push(M[_][2*A+1])}if(c)for(A=2;A<L;A++)l.push(w[0]),l.push(w[1]),l.push(w[2]),l.push(w[3*(A-1)]),l.push(w[3*(A-1)+1]),l.push(w[3*(A-1)+2]),l.push(w[3*A]),l.push(w[3*A+1]),l.push(w[3*A+2]);if(m&&"AllSame"!==m.mappingType){var G=u(X,S,C,m)[0];for(A=2;A<L;A++)d.push(G),d.push(G),d.push(G)}S++,O=!1,L=0,N=[],I=[],w=[],M=[],H=[],U=[]}}var V=new THREE.BufferGeometry;V.name=e.name,V.addAttribute("position",new THREE.Float32BufferAttribute(n,3)),l.length>0&&V.addAttribute("color",new THREE.Float32BufferAttribute(l,3));t&&(V.addAttribute("skinIndex",new THREE.Float32BufferAttribute(p,4)),V.addAttribute("skinWeight",new THREE.Float32BufferAttribute(h,4)),V.FBX_Deformer=t);s.length>0&&V.addAttribute("normal",new THREE.Float32BufferAttribute(s,3));if(f.length>0)for(A=0;A<f.length;A++){var W="uv"+(A+1).toString();0==A&&(W="uv"),V.addAttribute(W,new THREE.Float32BufferAttribute(f[A],2))}if(m&&"AllSame"!==m.mappingType){var q=d[0],Z=0;for(A=0;A<d.length;++A)d[A]!==q&&(V.addGroup(Z,A-Z,q),q=d[A],Z=A);if(V.groups.length>0){var K=V.groups[V.groups.length-1],$=K.start+K.count;$!==d.length&&V.addGroup($,d.length-$,q)}0===V.groups.length&&V.addGroup(0,d.length,d[0])}return V}(e,i)}(e,t,a);case"NurbsCurve":return function(e){if(void 0===THREE.NURBSCurve)return console.error("THREE.FBXLoader: The loader relies on THREE.NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry."),new THREE.BufferGeometry;var t=parseInt(e.properties.Order);if(isNaN(t))return console.error("THREE.FBXLoader: Invalid Order %s given for geometry ID: %s",e.properties.Order,e.id),new THREE.BufferGeometry;for(var a,r,i=t-1,n=e.subNodes.KnotVector.properties.a,o=[],s=e.subNodes.Points.properties.a,l=0,u=s.length;l<u;l+=4)o.push((new THREE.Vector4).fromArray(s,l));if("Closed"===e.properties.Form)o.push(o[0]);else if("Periodic"===e.properties.Form){a=i,r=n.length-1-a;for(l=0;l<i;++l)o.push(o[l])}var f=new THREE.NURBSCurve(i,n,o,a,r).getPoints(7*o.length),d=new Float32Array(3*f.length);for(l=0,u=f.length;l<u;++l)f[l].toArray(d,3*l);var h=new THREE.BufferGeometry;return h.addAttribute("position",new THREE.BufferAttribute(d,3)),h}(e)}}function o(e){var t=e.properties.MappingInformationType,a=e.properties.ReferenceInformationType,r=e.subNodes.UV.properties.a,i=[];return"IndexToDirect"===a&&(i=e.subNodes.UVIndex.properties.a),{dataSize:2,buffer:r,indices:i,mappingType:t,referenceType:a}}THREE.FBXLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},Object.assign(THREE.FBXLoader.prototype,{load:function(e,t,a,r){var i=this,n=THREE.LoaderUtils.extractUrlBase(e),o=new THREE.FileLoader(this.manager);o.setResponseType("arraybuffer"),o.load(e,(function(a){try{var o=i.parse(a,n);t(o)}catch(t){window.setTimeout((function(){r&&r(t),i.manager.itemError(e)}),0)}}),a,r)},parse:function(a,o){var s,l,u;if(u="Kaydara FBX Binary  \0",(l=a).byteLength>=u.length&&u===R(l,0,u.length))s=(new F).parse(a);else{var p=R(a);if(!function(e){var t=["K","a","y","d","a","r","a","\\","F","B","X","\\","B","i","n","a","r","y","\\","\\"],a=0;for(var r=0;r<t.length;++r){if((n=void 0,n=e[(i=1)-1],e=e.slice(a+i),a++,n)===t[r])return!1}var i,n;return!0}(p))throw new Error("THREE.FBXLoader: Unknown format.");if(b(p)<7e3)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+b(p));s=(new E).parse(p)}var c=function(e){var t=new Map;if("Connections"in e)for(var a=e.Connections.properties.connections,r=0,i=a.length;r<i;++r){var n=a[r];t.has(n[0])||t.set(n[0],{parents:[],children:[]});var o={ID:n[1],relationship:n[2]};t.get(n[0]).parents.push(o),t.has(n[1])||t.set(n[1],{parents:[],children:[]});var s={ID:n[0],relationship:n[2]};t.get(n[1]).children.push(s)}return t}(s),m=function(t){var a=new Map;if("Video"in t.Objects.subNodes){var r=t.Objects.subNodes.Video;for(var i in r){if("Content"in r[i].properties){var n=e(r[i]);a.set(parseInt(i),n)}}}return a}(s),v=function(e,t,a){var i=new Map;if("Material"in e.Objects.subNodes){var n=e.Objects.subNodes.Material;for(var o in n){var s=r(n[o],t,a);null!==s&&i.set(parseInt(o),s)}}return i}(s,function(e,a,r,i){var n=new Map,o=["jpg","jpeg","png","bmp"];if("Texture"in e.Objects.subNodes){var s=e.Objects.subNodes.Texture;for(var l in s){var u=s[l],f=u.properties.FileName.slice(u.properties.FileName.lastIndexOf(".")+1).toLowerCase();if(-1!=o.indexOf(f)){var d=t(u,a,r,i);n.set(parseInt(l),d)}}}return n}(s,new THREE.TextureLoader(this.manager).setPath(o),m,c),c),A=function(e,t){var a={};if("Deformer"in e.Objects.subNodes){var r=e.Objects.subNodes.Deformer;for(var n in r){if("Skin"===r[n].attrType){var o=i(t.get(parseInt(n)),r);o.FBX_ID=parseInt(n),a[n]=o}}}return a}(s,c),T=function(e,t,a){var r=new Map;if("Geometry"in e.Objects.subNodes){var i=e.Objects.subNodes.Geometry;for(var o in i){var s=t.get(parseInt(o)),l=n(i[o],s,a);r.set(parseInt(o),l)}}return r}(s,c,A);return function(e,t,a,r,i){var n=new THREE.Group,o=e.Objects.subNodes.Model,s=[],l=new Map;for(var u in o){for(var p=parseInt(u),c=o[u],m=t.get(p),v=null,A=0;A<m.parents.length;++A)for(var T in a){var x=(he=a[T]).map;if(ce=x[m.parents[A].ID]){var E=v;v=new THREE.Bone,he.bones[ce.index]=v,null!==E&&v.add(E)}}if(!v)switch(c.attrType){case"Camera":for(var F,y=0,_=m.children.length;y<_;++y){var b=m.children[y].ID;void 0!==(X=e.Objects.subNodes.NodeAttribute[b])&&void 0!==X.properties&&(F=X.properties)}if(void 0===F)v=new THREE.Object3D;else{var P=0;void 0!==F.CameraProjectionType&&1===F.CameraProjectionType.value&&(P=1);var S=1;void 0!==F.NearPlane&&(S=F.NearPlane.value/1e3);var R=1e3;void 0!==F.FarPlane&&(R=F.FarPlane.value/1e3);var I=window.innerWidth,w=window.innerHeight;void 0!==F.AspectWidth&&void 0!==F.AspectHeight&&(I=F.AspectWidth.value,w=F.AspectHeight.value);var M=I/w,H=45;switch(void 0!==F.FieldOfView&&(H=F.FieldOfView.value),P){case 0:v=new THREE.PerspectiveCamera(H,M,S,R);break;case 1:v=new THREE.OrthographicCamera(-I/2,I/2,w/2,-w/2,S,R);break;default:console.warn("THREE.FBXLoader: Unknown camera type "+P+"."),v=new THREE.Object3D}}break;case"Light":var U;for(y=0,_=m.children.length;y<_;++y){var X;b=m.children[y].ID;void 0!==(X=e.Objects.subNodes.NodeAttribute[b])&&void 0!==X.properties&&(U=X.properties)}if(void 0===U)v=new THREE.Object3D;else{P=void 0===U.LightType?0:U.LightType.value;var C=16777215;void 0!==U.Color&&(C=L(U.Color.value));var O=void 0===U.Intensity?1:U.Intensity.value/100;void 0!==U.CastLightOnObject&&0===U.CastLightOnObject.value&&(O=0);var Q=0;void 0!==U.FarAttenuationEnd&&(Q=void 0!==U.EnableFarAttenuation&&0===U.EnableFarAttenuation.value?0:U.FarAttenuationEnd.value/1e3);switch(P){case 0:v=new THREE.PointLight(C,O,Q,1);break;case 1:v=new THREE.DirectionalLight(C,O);break;case 2:var D=Math.PI/3;void 0!==U.InnerAngle&&(D=THREE.Math.degToRad(U.InnerAngle.value));var Y=0;void 0!==U.OuterAngle&&(Y=THREE.Math.degToRad(U.OuterAngle.value),Y=Math.max(Y,1)),v=new THREE.SpotLight(C,O,Q,D,Y,1);break;default:console.warn("THREE.FBXLoader: Unknown light type "+U.LightType.value+", defaulting to a THREE.PointLight."),v=new THREE.PointLight(C,O)}void 0!==U.CastShadows&&1===U.CastShadows.value&&(v.castShadow=!0)}break;case"Mesh":var B=null,k=null,z=[];for(y=0,_=m.children.length;y<_;++y){var j=m.children[y];r.has(j.ID)&&(B=r.get(j.ID)),i.has(j.ID)&&z.push(i.get(j.ID))}if(z.length>1?k=z:z.length>0?k=z[0]:(k=new THREE.MeshPhongMaterial({color:13421772}),z.push(k)),"color"in B.attributes)for(var G=0,V=z.length;G<V;++G)z[G].vertexColors=THREE.VertexColors;if(B.FBX_Deformer){for(var W=0,q=z.length;W<q;++W)z[W].skinning=!0;v=new THREE.SkinnedMesh(B,k)}else v=new THREE.Mesh(B,k);break;case"NurbsCurve":for(B=null,y=0,_=m.children.length;y<_;++y){j=m.children[y];r.has(j.ID)&&(B=r.get(j.ID))}k=new THREE.LineBasicMaterial({color:3342591,linewidth:5}),v=new THREE.Line(B,k);break;default:v=new THREE.Group}v.name=THREE.PropertyBinding.sanitizeNodeName(c.attrName),v.FBX_ID=p,s.push(v),l.set(p,v)}for(var Z=0,K=s.length;Z<K;++Z){v=s[Z];if("Lcl_Translation"in(c=o[v.FBX_ID]).properties&&v.position.fromArray(c.properties.Lcl_Translation.value),"Lcl_Rotation"in c.properties){var $=c.properties.Lcl_Rotation.value.map(THREE.Math.degToRad);$.push("ZYX"),v.rotation.fromArray($)}if("Lcl_Scaling"in c.properties&&v.scale.fromArray(c.properties.Lcl_Scaling.value),"PreRotation"in c.properties){(te=c.properties.PreRotation.value.map(THREE.Math.degToRad))[3]="ZYX";var J=(new THREE.Euler).fromArray(te);J=(new THREE.Quaternion).setFromEuler(J);var ee=(new THREE.Quaternion).setFromEuler(v.rotation);J.multiply(ee),v.rotation.setFromQuaternion(J,"ZYX")}if("GeometricTranslation"in c.properties){var te=c.properties.GeometricTranslation.value;v.traverse((function(e){e.geometry&&e.geometry.translate(te[0],te[1],te[2])}))}if("LookAtProperty"in c.properties)for(m=t.get(v.FBX_ID),y=0,_=m.children.length;y<_;++y){if("LookAtProperty"===(j=m.children[y]).relationship){var ae=e.Objects.subNodes.Model[j.ID];if("Lcl_Translation"in ae.properties){var re=ae.properties.Lcl_Translation.value;void 0!==v.target?(v.target.position.set(re[0],re[1],re[2]),n.add(v.target)):v.lookAt(new THREE.Vector3(re[0],re[1],re[2]))}}}m=t.get(v.FBX_ID);for(var ie=0;ie<m.parents.length;ie++){var ne=N(s,(function(e){return e.FBX_ID===m.parents[ie].ID}));if(ne>-1){s[ne].add(v);break}}null===v.parent&&n.add(v)}n.updateMatrixWorld(!0);var oe=new Map;if("Pose"in e.Objects.subNodes){var se=e.Objects.subNodes.Pose;for(var u in se)if("BindPose"===se[u].attrType){se=se[u];break}for(var le=se.subNodes.PoseNode,ue=0,fe=le.length;ue<fe;++ue){c=le[ue];var de=(new THREE.Matrix4).fromArray(c.subNodes.Matrix.properties.a);oe.set(parseInt(c.properties.Node),de)}}for(var T in a){var he;x=(he=a[T]).map;for(var pe in x){var ce,me=(ce=x[pe]).index,ve=he.bones[me];if(!oe.has(ve.FBX_ID))break;var ge=oe.get(ve.FBX_ID);ve.matrixWorld.copy(ge)}he.skeleton=new THREE.Skeleton(he.bones);for(var Ae=(m=t.get(he.FBX_ID)).parents,Te=0,xe=Ae.length;Te<xe;++Te){var Ee=Ae[Te];if(r.has(Ee.ID)){var Fe=Ee.ID,ye=t.get(Fe);for(A=0;A<ye.parents.length;++A)if(l.has(ye.parents[A].ID)){(v=l.get(ye.parents[A].ID)).bind(he.skeleton,v.matrixWorld);break}}}}n.updateMatrixWorld(!0),n.skeleton={bones:s};var _e=function(e,t,a){var r=e.Objects.subNodes.AnimationCurveNode,i=e.Objects.subNodes.AnimationCurve,n=e.Objects.subNodes.AnimationLayer,o=e.Objects.subNodes.AnimationStack,s=30;if("GlobalSettings"in e&&"TimeMode"in e.GlobalSettings.properties){var l=e.GlobalSettings.properties.TimeMode.value;14===l?"CustomFrameRate"in e.GlobalSettings.properties&&(s=-1===(s=e.GlobalSettings.properties.CustomFrameRate.value)?30:s):l<=17&&(s=[30,120,100,60,50,48,30,30,29.97,29.97,25,24,1,23.976,30,96,72,59.94][l])}var u={curves:new Map,layers:{},stacks:{},length:0,fps:s,frames:0},p=[];for(var c in r)if(c.match(/\d+/)){var m=f(e,r[c],t,a);p.push(m)}for(var v=new Map,g=0;g<p.length;++g)null!==p[g]&&v.set(p[g].id,p[g]);var A=[];for(c in i)if(c.match(/\d+/)){var T=d(i[c]);if(!t.has(T.id))continue;A.push(T);var x=t.get(T.id).parents[0],E=x.ID,F=x.relationship,y="";if(F.match(/X/))y="x";else if(F.match(/Y/))y="y";else{if(!F.match(/Z/))continue;y="z"}v.get(E).curves[y]=T}for(var c in v.forEach((function(e){var t=e.containerBoneID;if(u.curves.has(t)||u.curves.set(t,{T:null,R:null,S:null}),u.curves.get(t)[e.attr]=e,"R"===e.attr){var a=e.curves;if(null===a.x&&(a.x={version:null,times:[0],values:[0]}),null===a.y&&(a.y={version:null,times:[0],values:[0]}),null===a.z&&(a.z={version:null,times:[0],values:[0]}),a.x.values=a.x.values.map(THREE.Math.degToRad),a.y.values=a.y.values.map(THREE.Math.degToRad),a.z.values=a.z.values.map(THREE.Math.degToRad),null!==e.preRotations){var r=(new THREE.Euler).setFromVector3(e.preRotations,"ZYX");r=(new THREE.Quaternion).setFromEuler(r);for(var i=new THREE.Euler,n=new THREE.Quaternion,o=0;o<a.x.times.length;++o)i.set(a.x.values[o],a.y.values[o],a.z.values[o],"ZYX"),n.setFromEuler(i).premultiply(r),i.setFromQuaternion(n,"ZYX"),a.x.values[o]=i.x,a.y.values[o]=i.y,a.z.values[o]=i.z}}})),n){for(var _=[],b=t.get(parseInt(c)).children,P=0;P<b.length;P++)if(v.has(b[P].ID)){var S=v.get(b[P].ID),L=S.containerBoneID;void 0===_[L]&&(_[L]={T:null,R:null,S:null}),_[L][S.attr]=S}u.layers[c]=_}for(var c in o){var R=[],N=(b=t.get(parseInt(c)).children,{max:0,min:Number.MAX_VALUE});for(P=0;P<b.length;++P){var I=u.layers[b[P].ID];if(void 0!==I){R.push(I);for(var w=0,M=I.length;w<M;++w){(_=I[w])&&h(_,N)}}}N.max>N.min&&(u.stacks[c]={name:o[c].attrName,layers:R,length:N.max-N.min,frames:(N.max-N.min)*u.fps})}return u}(e,t,n);if(function(e,t){void 0===e.animations&&(e.animations=[]);var a=t.stacks;for(var r in a){for(var i=a[r],n={name:i.name,fps:t.fps,length:i.length,hierarchy:[]},o=e.skeleton.bones,s=0,l=o.length;s<l;++s){var u=(h=o[s]).name.replace(/.*:/,""),f=N(o,(function(e){return h.parent===e}));n.hierarchy.push({parent:f,name:u,keys:[]})}for(var d=0;d<=i.frames;d++)for(s=0,l=o.length;s<l;++s)for(var h=o[s],p=s,c=i.layers[0][p],m=0,v=n.hierarchy.length;m<v;++m){var A=n.hierarchy[m];A.name===h.name&&A.keys.push(g(t,c,h,d))}e.animations.push(THREE.AnimationClip.parseAnimation(n,o))}}(n,_e),"GlobalSettings"in e&&"AmbientColor"in e.GlobalSettings.properties){var be=e.GlobalSettings.properties.AmbientColor.value,Pe=be[0],Se=be[1],Le=be[2];if(0!==Pe||0!==Se||0!==Le){C=new THREE.Color(Pe,Se,Le);n.add(new THREE.AmbientLight(C,1))}}return n}(s,c,A,T,v)}});var s=[],l={ByPolygonVertex:{Direct:function(e,t,a,r){var i=e*r.dataSize,n=e*r.dataSize+r.dataSize;return I(s,r.buffer,i,n)},IndexToDirect:function(e,t,a,r){var i=r.indices[e],n=i*r.dataSize,o=i*r.dataSize+r.dataSize;return I(s,r.buffer,n,o)}},ByPolygon:{Direct:function(e,t,a,r){var i=t*r.dataSize,n=t*r.dataSize+r.dataSize;return I(s,r.buffer,i,n)},IndexToDirect:function(e,t,a,r){var i=r.indices[t],n=i*r.dataSize,o=i*r.dataSize+r.dataSize;return I(s,r.buffer,n,o)}},ByVertice:{Direct:function(e,t,a,r){var i=a*r.dataSize,n=a*r.dataSize+r.dataSize;return I(s,r.buffer,i,n)}},AllSame:{IndexToDirect:function(e,t,a,r){var i=r.indices[0]*r.dataSize,n=r.indices[0]*r.dataSize+r.dataSize;return I(s,r.buffer,i,n)}}};function u(e,t,a,r){return l[r.mappingType][r.referenceType](e,t,a,r)}function f(e,t,a,r){var i=e.Objects.subNodes.Model,n={id:t.id,attr:t.attrName,internalID:t.id,attrX:!1,attrY:!1,attrZ:!1,containerBoneID:-1,containerID:-1,curves:{x:null,y:null,z:null},preRotations:null};if(!n.attr.match(/S|R|T/))return null;for(var o in t.properties)o.match(/X/)&&(n.attrX=!0),o.match(/Y/)&&(n.attrY=!0),o.match(/Z/)&&(n.attrZ=!0);for(var s,l=a.get(n.id).parents,u=l.length-1;u>=0;--u){var f=N(r.skeleton.bones,(function(e){return e.FBX_ID===l[u].ID}));if(f>-1){n.containerBoneID=f,n.containerID=l[u].ID;var d=i[n.containerID.toString()];"PreRotation"in d.properties&&(n.preRotations=(s=d.properties.PreRotation,(new THREE.Vector3).fromArray(s.value)).multiplyScalar(Math.PI/180));break}}return n}function d(e){return{version:null,id:e.id,internalID:e.id,times:e.subNodes.KeyTime.properties.a.map(P),values:e.subNodes.KeyValueFloat.properties.a,attrFlag:e.subNodes.KeyAttrFlags.properties.a,attrData:e.subNodes.KeyAttrDataFloat.properties.a}}function h(e,t){e.R&&p(e.R.curves,t),e.S&&p(e.S.curves,t),e.T&&p(e.T.curves,t)}function p(e,t){e.x&&c(e.x,t),e.y&&c(e.y,t),e.z&&c(e.z,t)}function c(e,t){t.max=e.times[e.times.length-1]>t.max?e.times[e.times.length-1]:t.max,t.min=e.times[0]<t.min?e.times[0]:t.min}var m=new THREE.Euler,v=new THREE.Quaternion;function g(e,t,a,r){var i={time:r/e.fps,pos:a.position.toArray(),rot:a.quaternion.toArray(),scl:a.scale.toArray()};if(void 0===t)return i;m.setFromQuaternion(a.quaternion,"ZYX",!1);try{T(t,"T")&&x(t.T,r)&&(t.T.curves.x.values[r]&&(i.pos[0]=t.T.curves.x.values[r]),t.T.curves.y.values[r]&&(i.pos[1]=t.T.curves.y.values[r]),t.T.curves.z.values[r]&&(i.pos[2]=t.T.curves.z.values[r])),T(t,"R")&&x(t.R,r)&&(t.R.curves.x.values[r]&&(m.x=t.R.curves.x.values[r]),t.R.curves.y.values[r]&&(m.y=t.R.curves.y.values[r]),t.R.curves.z.values[r]&&(m.z=t.R.curves.z.values[r]),v.setFromEuler(m),i.rot=v.toArray()),T(t,"S")&&x(t.S,r)&&(t.T.curves.x.values[r]&&(i.scl[0]=t.S.curves.x.values[r]),t.T.curves.y.values[r]&&(i.scl[1]=t.S.curves.y.values[r]),t.T.curves.z.values[r]&&(i.scl[2]=t.S.curves.z.values[r]))}catch(e){console.log("THREE.FBXLoader: ",a),console.log("THREE.FBXLoader: ",e)}return i}var A=["x","y","z"];function T(e,t){if(void 0===e)return!1;var a=e[t];return!!a&&A.every((function(e){return null!==a.curves[e]}))}function x(e,t){return A.every((function(a){return function(e,t){return void 0!==e.values[t]}(e.curves[a],t)}))}function E(){}function F(){}function y(e,t){this.dv=new DataView(e),this.offset=0,this.littleEndian=void 0===t||t}function _(){}function b(e){var t=e.match(/FBXVersion: (\d+)/);if(t)return parseInt(t[1]);throw new Error("THREE.FBXLoader: Cannot find the version number for the file given.")}function P(e){return e/46186158e3}function S(e){for(var t=e.split(","),a=0,r=t.length;a<r;a++)t[a]=parseFloat(t[a]);return t}function L(e){return(new THREE.Color).fromArray(e.value)}function R(e,t,a){void 0===t&&(t=0),void 0===a&&(a=e.byteLength);var r=new Uint8Array(e,t,a);if(void 0!==window.TextDecoder)return(new TextDecoder).decode(r);for(var i="",n=0,o=r.length;n<o;n++)i+=String.fromCharCode(r[n]);return i}function N(e,t){for(var a=0,r=e.length;a<r;a++)if(t(e[a]))return a;return-1}function I(e,t,a,r){for(var i=a,n=0;i<r;i++,n++)e[n]=t[i];return e}Object.assign(E.prototype,{getPrevNode:function(){return this.nodeStack[this.currentIndent-2]},getCurrentNode:function(){return this.nodeStack[this.currentIndent-1]},getCurrentProp:function(){return this.currentProp},pushStack:function(e){this.nodeStack.push(e),this.currentIndent+=1},popStack:function(){this.nodeStack.pop(),this.currentIndent-=1},setCurrentProp:function(e,t){this.currentProp=e,this.currentPropName=t},parse:function(e){this.currentIndent=0,this.allNodes=new _,this.nodeStack=[],this.currentProp=[],this.currentPropName="";for(var t=e.split("\n"),a=0,r=t.length;a<r;a++){if(!(l=t[a]).match(/^[\s\t]*;/)&&!l.match(/^[\s\t]*$/)){var i=new RegExp("^\\t{"+this.currentIndent+"}(\\w+):(.*){","");if(u=l.match(i)){for(var n=u[1].trim().replace(/^"/,"").replace(/"$/,""),o=u[2].split(","),s=0,l=o.length;s<l;s++)o[s]=o[s].trim().replace(/^"/,"").replace(/"$/,"");this.parseNodeBegin(l,n,o||null)}else{var u,f=new RegExp("^\\t{"+this.currentIndent+"}(\\w+):[\\s\\t\\r\\n](.*)");if(u=l.match(f)){var d=u[1].replace(/^"/,"").replace(/"$/,"").trim(),h=u[2].replace(/^"/,"").replace(/"$/,"").trim();"Content"===d&&","===h&&(h=t[++a].replace(/"/g,"").replace(/,$/,"").trim()),this.parseNodeProperty(l,d,h)}else{var p=new RegExp("^\\t{"+(this.currentIndent-1)+"}}");l.match(p)?this.nodeEnd():l.match(/^[^\s\t}]/)&&this.parseNodePropertyContinued(l)}}}}return this.allNodes},parseNodeBegin:function(e,t,a){var r={name:t,properties:{},subNodes:{}},i=this.parseNodeAttr(a),n=this.getCurrentNode();if(0===this.currentIndent)this.allNodes.add(t,r);else if(t in n.subNodes){var o=n.subNodes[t];this.isFlattenNode(n.subNodes[t])&&(""===i.id?(n.subNodes[t]=[],n.subNodes[t].push(o)):(n.subNodes[t]={},n.subNodes[t][o.id]=o)),""===i.id?n.subNodes[t].push(r):n.subNodes[t][i.id]=r}else"number"==typeof i.id||i.id.match(/^\d+$/)?(n.subNodes[t]={},n.subNodes[t][i.id]=r):n.subNodes[t]=r;a&&(r.id=i.id,r.attrName=i.name,r.attrType=i.type),this.pushStack(r)},parseNodeAttr:function(e){var t=e[0];""!==e[0]&&(t=parseInt(e[0]),isNaN(t)&&(t=e[0]));var a="",r="";return e.length>1&&(a=e[1].replace(/^(\w+)::/,""),r=e[2]),{id:t,name:a,type:r}},parseNodeProperty:function(e,t,a){var r=this.getCurrentNode(),i=r.name;if(void 0!==i&&i.match(/Properties(\d)+/))return void this.parseNodeSpecialProperty(e,t,a);if("C"===t){var n=a.split(",").slice(1),o=parseInt(n[0]),s=parseInt(n[1]),l=a.split(",").slice(3);t="connections",function(e,t){for(var a=0,r=e.length,i=t.length;a<i;a++,r++)e[r]=t[a]}(a=[o,s],l=l.map((function(e){return e.trim().replace(/^"/,"")}))),void 0===r.properties[t]&&(r.properties[t]=[])}if("Node"===t){var u=parseInt(a);r.properties.id=u,r.id=u}t in r.properties?Array.isArray(r.properties[t])?r.properties[t].push(a):r.properties[t]+=a:Array.isArray(r.properties[t])?r.properties[t].push(a):r.properties[t]=a,this.setCurrentProp(r.properties,t),"a"===t&&","!==a.slice(-1)&&(r.properties.a=S(a))},parseNodePropertyContinued:function(e){if(this.currentProp[this.currentPropName]+=e,","!==e.slice(-1)){var t=this.getCurrentNode();t.properties.a=S(t.properties.a)}},parseNodeSpecialProperty:function(e,t,a){for(var r=a.split('",'),i=0,n=r.length;i<n;i++)r[i]=r[i].trim().replace(/^\"/,"").replace(/\s/,"_");var o=r[0],s=r[1],l=r[2],u=r[3],f=r[4];switch(s){case"int":case"enum":case"bool":case"ULongLong":f=parseInt(f);break;case"double":case"Number":case"FieldOfView":f=parseFloat(f);break;case"ColorRGB":case"Vector3D":case"Lcl_Translation":case"Lcl_Rotation":case"Lcl_Scaling":f=S(f)}this.getPrevNode().properties[o]={type:s,type2:l,flag:u,value:f},this.setCurrentProp(this.getPrevNode().properties,o)},nodeEnd:function(){this.popStack()},isFlattenNode:function(e){return"subNodes"in e&&"properties"in e}}),Object.assign(F.prototype,{parse:function(e){var t=new y(e);t.skip(23);for(var a=t.getUint32(),r=new _;!this.endOfContent(t);)try{var i=this.parseNode(t,a);null!==i&&r.add(i.name,i)}catch(e){console.log(e)}return r},endOfContent:function(e){return e.size()%16==0?(e.getOffset()+160+16&-16)>=e.size():e.getOffset()+160+16>=e.size()},parseNode:function(e,t){var a=t>=7500?e.getUint64():e.getUint32(),r=t>=7500?e.getUint64():e.getUint32(),i=(t>=7500?e.getUint64():e.getUint32(),e.getUint8()),n=e.getString(i);if(0===a)return null;for(var o=[],s=0;s<r;s++)o.push(this.parseProperty(e));var l=o.length>0?o[0]:"",u=o.length>1?o[1]:"",f=o.length>2?o[2]:"",d={},h={},p=!1;for(1===r&&e.getOffset()===a&&(p=!0);a>e.getOffset();){var c=this.parseNode(e,t);if(null!==c)if(!0!==c.singleProperty)if("Connections"!==n||"C"!==c.name)if(c.name.match(/^Properties\d+$/)){var m=Object.keys(c.properties);for(s=0,y=m.length;s<y;s++){var v=m[s];h[v]=c.properties[v]}}else if(n.match(/^Properties\d+$/)&&"P"===c.name){var g,A=c.propertyList[0],T=c.propertyList[1],x=c.propertyList[2],E=c.propertyList[3];0===A.indexOf("Lcl ")&&(A=A.replace("Lcl ","Lcl_")),0===T.indexOf("Lcl ")&&(T=T.replace("Lcl ","Lcl_")),g="ColorRGB"===T||"Vector"===T||"Vector3D"===T||0===T.indexOf("Lcl_")?[c.propertyList[4],c.propertyList[5],c.propertyList[6]]:c.propertyList[4],h[A]={type:T,type2:x,flag:E,value:g}}else void 0===d[c.name]?"number"==typeof c.id?(d[c.name]={},d[c.name][c.id]=c):d[c.name]=c:""===c.id?(Array.isArray(d[c.name])||(d[c.name]=[d[c.name]]),d[c.name].push(c)):void 0===d[c.name][c.id]?d[c.name][c.id]=c:(Array.isArray(d[c.name][c.id])||(d[c.name][c.id]=[d[c.name][c.id]]),d[c.name][c.id].push(c));else{for(var F=[],s=1,y=c.propertyList.length;s<y;s++)F[s-1]=c.propertyList[s];void 0===h.connections&&(h.connections=[]),h.connections.push(F)}else{var _=c.propertyList[0];Array.isArray(_)?(d[c.name]=c,c.properties.a=_):h[c.name]=_}}return{singleProperty:p,id:l,attrName:u,attrType:f,name:n,properties:h,propertyList:o,subNodes:d}},parseProperty:function(e){var t=e.getChar();switch(t){case"C":return e.getBoolean();case"D":return e.getFloat64();case"F":return e.getFloat32();case"I":return e.getInt32();case"L":return e.getInt64();case"R":var a=e.getUint32();return e.getArrayBuffer(a);case"S":a=e.getUint32();return e.getString(a);case"Y":return e.getInt16();case"b":case"c":case"d":case"f":case"i":case"l":var r=e.getUint32(),i=e.getUint32(),n=e.getUint32();if(0===i)switch(t){case"b":case"c":return e.getBooleanArray(r);case"d":return e.getFloat64Array(r);case"f":return e.getFloat32Array(r);case"i":return e.getInt32Array(r);case"l":return e.getInt64Array(r)}if(void 0===window.Zlib)throw new Error("THREE.FBXLoader: External library Inflate.min.js required, obtain or import from https://github.com/imaya/zlib.js");var o=new y(new Zlib.Inflate(new Uint8Array(e.getArrayBuffer(n))).decompress().buffer);switch(t){case"b":case"c":return o.getBooleanArray(r);case"d":return o.getFloat64Array(r);case"f":return o.getFloat32Array(r);case"i":return o.getInt32Array(r);case"l":return o.getInt64Array(r)}default:throw new Error("THREE.FBXLoader: Unknown property type "+t)}}}),Object.assign(y.prototype,{getOffset:function(){return this.offset},size:function(){return this.dv.buffer.byteLength},skip:function(e){this.offset+=e},getBoolean:function(){return 1==(1&this.getUint8())},getBooleanArray:function(e){for(var t=[],a=0;a<e;a++)t.push(this.getBoolean());return t},getInt8:function(){var e=this.dv.getInt8(this.offset);return this.offset+=1,e},getInt8Array:function(e){for(var t=[],a=0;a<e;a++)t.push(this.getInt8());return t},getUint8:function(){var e=this.dv.getUint8(this.offset);return this.offset+=1,e},getUint8Array:function(e){for(var t=[],a=0;a<e;a++)t.push(this.getUint8());return t},getInt16:function(){var e=this.dv.getInt16(this.offset,this.littleEndian);return this.offset+=2,e},getInt16Array:function(e){for(var t=[],a=0;a<e;a++)t.push(this.getInt16());return t},getUint16:function(){var e=this.dv.getUint16(this.offset,this.littleEndian);return this.offset+=2,e},getUint16Array:function(e){for(var t=[],a=0;a<e;a++)t.push(this.getUint16());return t},getInt32:function(){var e=this.dv.getInt32(this.offset,this.littleEndian);return this.offset+=4,e},getInt32Array:function(e){for(var t=[],a=0;a<e;a++)t.push(this.getInt32());return t},getUint32:function(){var e=this.dv.getUint32(this.offset,this.littleEndian);return this.offset+=4,e},getUint32Array:function(e){for(var t=[],a=0;a<e;a++)t.push(this.getUint32());return t},getInt64:function(){var e,t;return this.littleEndian?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),2147483648&t?(t=4294967295&~t,4294967295===(e=4294967295&~e)&&(t=t+1&4294967295),-(4294967296*t+(e=e+1&4294967295))):4294967296*t+e},getInt64Array:function(e){for(var t=[],a=0;a<e;a++)t.push(this.getInt64());return t},getUint64:function(){var e,t;return this.littleEndian?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),4294967296*t+e},getUint64Array:function(e){for(var t=[],a=0;a<e;a++)t.push(this.getUint64());return t},getFloat32:function(){var e=this.dv.getFloat32(this.offset,this.littleEndian);return this.offset+=4,e},getFloat32Array:function(e){for(var t=[],a=0;a<e;a++)t.push(this.getFloat32());return t},getFloat64:function(){var e=this.dv.getFloat64(this.offset,this.littleEndian);return this.offset+=8,e},getFloat64Array:function(e){for(var t=[],a=0;a<e;a++)t.push(this.getFloat64());return t},getArrayBuffer:function(e){var t=this.dv.buffer.slice(this.offset,this.offset+e);return this.offset+=e,t},getChar:function(){return String.fromCharCode(this.getUint8())},getString:function(e){for(var t="";e>0;){var a=this.getUint8();if(e--,0===a)break;t+=String.fromCharCode(a)}return t=decodeURIComponent(escape(t)),this.skip(e),t}}),Object.assign(_.prototype,{add:function(e,t){this[e]=t}})}()},function(e,t){THREE.OBJLoader=function(){var e=/^[og]\s*(.+)?/,t=/^mtllib /,a=/^usemtl /;function r(){var e={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materialLibraries:[],startObject:function(e,t){if(this.object&&!1===this.object.fromDeclaration)return this.object.name=e,void(this.object.fromDeclaration=!1!==t);var a=this.object&&"function"==typeof this.object.currentMaterial?this.object.currentMaterial():void 0;if(this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0),this.object={name:e||"",fromDeclaration:!1!==t,geometry:{vertices:[],normals:[],colors:[],uvs:[]},materials:[],smooth:!0,startMaterial:function(e,t){var a=this._finalize(!1);a&&(a.inherited||a.groupCount<=0)&&this.materials.splice(a.index,1);var r={index:this.materials.length,name:e||"",mtllib:Array.isArray(t)&&t.length>0?t[t.length-1]:"",smooth:void 0!==a?a.smooth:this.smooth,groupStart:void 0!==a?a.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(e){var t={index:"number"==typeof e?e:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return t.clone=this.clone.bind(t),t}};return this.materials.push(r),r},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(e){var t=this.currentMaterial();if(t&&-1===t.groupEnd&&(t.groupEnd=this.geometry.vertices.length/3,t.groupCount=t.groupEnd-t.groupStart,t.inherited=!1),e&&this.materials.length>1)for(var a=this.materials.length-1;a>=0;a--)this.materials[a].groupCount<=0&&this.materials.splice(a,1);return e&&0===this.materials.length&&this.materials.push({name:"",smooth:this.smooth}),t}},a&&a.name&&"function"==typeof a.clone){var r=a.clone(0);r.inherited=!0,this.object.materials.push(r)}this.objects.push(this.object)},finalize:function(){this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0)},parseVertexIndex:function(e,t){var a=parseInt(e,10);return 3*(a>=0?a-1:a+t/3)},parseNormalIndex:function(e,t){var a=parseInt(e,10);return 3*(a>=0?a-1:a+t/3)},parseUVIndex:function(e,t){var a=parseInt(e,10);return 2*(a>=0?a-1:a+t/2)},addVertex:function(e,t,a){var r=this.vertices,i=this.object.geometry.vertices;i.push(r[e+0],r[e+1],r[e+2]),i.push(r[t+0],r[t+1],r[t+2]),i.push(r[a+0],r[a+1],r[a+2])},addVertexPoint:function(e){var t=this.vertices;this.object.geometry.vertices.push(t[e+0],t[e+1],t[e+2])},addVertexLine:function(e){var t=this.vertices;this.object.geometry.vertices.push(t[e+0],t[e+1],t[e+2])},addNormal:function(e,t,a){var r=this.normals,i=this.object.geometry.normals;i.push(r[e+0],r[e+1],r[e+2]),i.push(r[t+0],r[t+1],r[t+2]),i.push(r[a+0],r[a+1],r[a+2])},addColor:function(e,t,a){var r=this.colors,i=this.object.geometry.colors;i.push(r[e+0],r[e+1],r[e+2]),i.push(r[t+0],r[t+1],r[t+2]),i.push(r[a+0],r[a+1],r[a+2])},addUV:function(e,t,a){var r=this.uvs,i=this.object.geometry.uvs;i.push(r[e+0],r[e+1]),i.push(r[t+0],r[t+1]),i.push(r[a+0],r[a+1])},addUVLine:function(e){var t=this.uvs;this.object.geometry.uvs.push(t[e+0],t[e+1])},addFace:function(e,t,a,r,i,n,o,s,l){var u=this.vertices.length,f=this.parseVertexIndex(e,u),d=this.parseVertexIndex(t,u),h=this.parseVertexIndex(a,u);if(this.addVertex(f,d,h),void 0!==r&&""!==r){var p=this.uvs.length;f=this.parseUVIndex(r,p),d=this.parseUVIndex(i,p),h=this.parseUVIndex(n,p),this.addUV(f,d,h)}if(void 0!==o&&""!==o){var c=this.normals.length;f=this.parseNormalIndex(o,c),d=o===s?f:this.parseNormalIndex(s,c),h=o===l?f:this.parseNormalIndex(l,c),this.addNormal(f,d,h)}this.colors.length>0&&this.addColor(f,d,h)},addPointGeometry:function(e){this.object.geometry.type="Points";for(var t=this.vertices.length,a=0,r=e.length;a<r;a++)this.addVertexPoint(this.parseVertexIndex(e[a],t))},addLineGeometry:function(e,t){this.object.geometry.type="Line";for(var a=this.vertices.length,r=this.uvs.length,i=0,n=e.length;i<n;i++)this.addVertexLine(this.parseVertexIndex(e[i],a));var o=0;for(n=t.length;o<n;o++)this.addUVLine(this.parseUVIndex(t[o],r))}};return e.startObject("",!1),e}function i(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager,this.materials=null}return i.prototype={constructor:i,load:function(e,t,a,r){var i=this,n=new THREE.FileLoader(i.manager);n.setPath(this.path),n.load(e,(function(e){t(i.parse(e))}),a,r)},setPath:function(e){return this.path=e,this},setMaterials:function(e){return this.materials=e,this},parse:function(i){console.time("OBJLoader");var n=new r;-1!==i.indexOf("\r\n")&&(i=i.replace(/\r\n/g,"\n")),-1!==i.indexOf("\\\n")&&(i=i.replace(/\\\n/g,""));for(var o=i.split("\n"),s="",l="",u=[],f="function"==typeof"".trimLeft,d=0,h=o.length;d<h;d++)if(s=o[d],0!==(s=f?s.trimLeft():s.trim()).length&&"#"!==(l=s.charAt(0)))if("v"===l){var p=s.split(/\s+/);switch(p[0]){case"v":n.vertices.push(parseFloat(p[1]),parseFloat(p[2]),parseFloat(p[3])),8===p.length&&n.colors.push(parseFloat(p[4]),parseFloat(p[5]),parseFloat(p[6]));break;case"vn":n.normals.push(parseFloat(p[1]),parseFloat(p[2]),parseFloat(p[3]));break;case"vt":n.uvs.push(parseFloat(p[1]),parseFloat(p[2]))}}else if("f"===l){for(var c=s.substr(1).trim().split(/\s+/),m=[],v=0,g=c.length;v<g;v++){var A=c[v];if(A.length>0){var T=A.split("/");m.push(T)}}var x=m[0];for(v=1,g=m.length-1;v<g;v++){var E=m[v],F=m[v+1];n.addFace(x[0],E[0],F[0],x[1],E[1],F[1],x[2],E[2],F[2])}}else if("l"===l){var y=s.substring(1).trim().split(" "),_=[],b=[];if(-1===s.indexOf("/"))_=y;else for(var P=0,S=y.length;P<S;P++){var L=y[P].split("/");""!==L[0]&&_.push(L[0]),""!==L[1]&&b.push(L[1])}n.addLineGeometry(_,b)}else if("p"===l){var R=s.substr(1).trim().split(" ");n.addPointGeometry(R)}else if(null!==(u=e.exec(s))){var N=(" "+u[0].substr(1).trim()).substr(1);n.startObject(N)}else if(a.test(s))n.object.startMaterial(s.substring(7).trim(),n.materialLibraries);else if(t.test(s))n.materialLibraries.push(s.substring(7).trim());else{if("s"!==l){if("\0"===s)continue;throw new Error('THREE.OBJLoader: Unexpected line: "'+s+'"')}if((u=s.split(" ")).length>1){var I=u[1].trim().toLowerCase();n.object.smooth="0"!==I&&"off"!==I}else n.object.smooth=!0;(j=n.object.currentMaterial())&&(j.smooth=n.object.smooth)}n.finalize();var w=new THREE.Group;w.materialLibraries=[].concat(n.materialLibraries);for(d=0,h=n.objects.length;d<h;d++){var M=n.objects[d],H=M.geometry,U=M.materials,X="Line"===H.type,C="Points"===H.type,O=!1;if(0!==H.vertices.length){var Q=new THREE.BufferGeometry;Q.addAttribute("position",new THREE.Float32BufferAttribute(H.vertices,3)),H.normals.length>0?Q.addAttribute("normal",new THREE.Float32BufferAttribute(H.normals,3)):Q.computeVertexNormals(),H.colors.length>0&&(O=!0,Q.addAttribute("color",new THREE.Float32BufferAttribute(H.colors,3))),H.uvs.length>0&&Q.addAttribute("uv",new THREE.Float32BufferAttribute(H.uvs,2));for(var D,Y=[],B=0,k=U.length;B<k;B++){var z=U[B],j=void 0;if(null!==this.materials)if(j=this.materials.create(z.name),!X||!j||j instanceof THREE.LineBasicMaterial){if(C&&j&&!(j instanceof THREE.PointsMaterial)){var G=new THREE.PointsMaterial({size:10,sizeAttenuation:!1});V.copy(j),j=G}}else{var V=new THREE.LineBasicMaterial;V.copy(j),V.lights=!1,j=V}j||((j=X?new THREE.LineBasicMaterial:C?new THREE.PointsMaterial({size:1,sizeAttenuation:!1}):new THREE.MeshPhongMaterial).name=z.name),j.flatShading=!z.smooth,j.vertexColors=O?THREE.VertexColors:THREE.NoColors,Y.push(j)}if(Y.length>1){for(B=0,k=U.length;B<k;B++){z=U[B];Q.addGroup(z.groupStart,z.groupCount,B)}D=X?new THREE.LineSegments(Q,Y):C?new THREE.Points(Q,Y):new THREE.Mesh(Q,Y)}else D=X?new THREE.LineSegments(Q,Y[0]):C?new THREE.Points(Q,Y[0]):new THREE.Mesh(Q,Y[0]);D.name=M.name,w.add(D)}}return console.timeEnd("OBJLoader"),w}},i}()},function(e,t,a){"use strict";function r(e,t){for(var a=0;a<t.length;a++){var r=t[a];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}a.r(t);var i=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.offset=.1,this.camera=new THREE.PerspectiveCamera(60,1,.1,2e6),this.camera.up=new THREE.Vector3(0,1,0),this.camera.rotation.order="YXZ",this.camera.position.set(5,0,5),this.target=new THREE.Vector3(0,0,0),this.age=0}var t,a,i;return t=e,(a=[{key:"bind",value:function(e){var t=this;this.ref={},this.resize(),window.addEventListener("resize",(function(){t.resize()}))}},{key:"resize",value:function(){var e=window.innerWidth,t=window.innerHeight;this.camera.aspect=e/t,this.camera.updateProjectionMatrix()}},{key:"update",value:function(e){this.age+=e;var t=.25*this.age;this.camera.position.y=5+1*Math.sin(t),this.camera.lookAt(this.target)}}])&&r(t.prototype,a),i&&r(t,i),e}(),n=function(){var e,t=!1;return e=navigator.userAgent||navigator.vendor||window.opera,(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4)))&&(t=!0),t};function o(e,t){for(var a=0;a<t.length;a++){var r=t[a];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var s=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.lightingModel=n()?1:2,this.lights={point:{},ambient:{},directional:{},hemisphere:{},spot:{}},this.lights.point.a=new THREE.PointLight(16777215,1,24,this.lightingModel),this.lights.ambient.a=new THREE.AmbientLight(16777215,.3),this.lights.directional.a=new THREE.DirectionalLight(16777215,.5),this.lights.hemisphere.a=new THREE.HemisphereLight(0,255,.25),this.lights.spot.a=new THREE.SpotLight(16777215,1,32,Math.PI/3,.25)}var t,a,r;return t=e,(a=[{key:"bind",value:function(e){this.ref={},this.ref.scene=e.modules.scene.scene,this.ref.materials=e.modules.materials,this.init()}},{key:"init",value:function(e){var t=this;this.updateCallback=null,this.lights.point.a.position.set(0,10,0),this.lights.directional.a.position.set(-1,1.5,-1),this.lights.spot.a.position.set(0,10,14),this.lights.spot.a.target.position.set(-4,0,6),this.lights.point.a.intensity=1,this.lights.ambient.a.intensity=.3,this.lights.directional.a.intensity=.5,this.lights.hemisphere.a.intensity=.25,this.lights.spot.a.intensity=1,this.lights.point.a.color.setHex(16777215),this.lights.ambient.a.color.setHex(16777215),this.lights.spot.a.color.setHex(16777215),this.lights.point.a.distance=32,this.lights.spot.a.distance=32,this.lights.spot.a.angle=Math.PI/3,this.lights.spot.a.penumbra=.25,Object.keys(this.lights).forEach((function(e){Object.keys(t.lights[e]).forEach((function(a){var r=t.lights[e][a];t.ref.scene.add(r),r.isSpotLight&&t.ref.scene.add(r.target)}))})),this.ref.scene.fog=new THREE.FogExp2(0,0)}}])&&o(t.prototype,a),r&&o(t,r),e}();function l(e,t){for(var a=0;a<t.length;a++){var r=t[a];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.el={},this.el.loadingScreen=document.querySelector(".loading"),this.hide()}var t,a,r;return t=e,(a=[{key:"show",value:function(e){this.el.loadingScreen.classList.add("active")}},{key:"hide",value:function(){this.el.loadingScreen.classList.remove("active")}}])&&l(t.prototype,a),r&&l(t,r),e}();function f(e,t){for(var a=0;a<t.length;a++){var r=t[a];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var d=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.active=!1,this.deltaMax=.1}var t,a,r;return t=e,(a=[{key:"bind",value:function(e){var t=this;this.ref={},this.ref.update=[],this.ref.render=[],Object.keys(e.modules).forEach((function(a){e.modules[a].update&&t.ref.update.push(e.modules[a]),e.modules[a].render&&t.ref.render.push(e.modules[a])})),this.el={},this.now=performance.now(),this.loop()}},{key:"start",value:function(){this.now=performance.now(),this.active=!0}},{key:"stop",value:function(){this.active=!1}},{key:"loop",value:function(){var e=this;if(requestAnimationFrame((function(){e.loop()})),this.active){var t=performance.now(),a=Math.min(this.deltaMax,(t-this.now)/1e3);this.now=t,this.ref.update.forEach((function(e){e.update(a)})),this.ref.render.forEach((function(e){e.render(a)}))}}}])&&f(t.prototype,a),r&&f(t,r),e}();function h(e,t){for(var a=0;a<t.length;a++){var r=t[a];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var p=function(){function e(){var t=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.path="".concat(APP_ROOT),this.mat={},this.mat.default=new THREE.MeshPhysicalMaterial({emissive:0,roughness:1,envMapIntensity:.25}),this.mat.porcelain=new THREE.MeshPhysicalMaterial({color:4473924,emissive:8947848,emissiveIntensity:.6,roughness:.55,metalness:.125,envMapIntensity:.5}),this.mat.metal=new THREE.MeshPhysicalMaterial({color:11046521,emissive:0,roughness:.25,metalness:1,envMapIntensity:.5}),this.mat.neon=new THREE.MeshPhysicalMaterial({emissive:16777215,emissiveIntensity:1}),this.envMap=this.createEnvMap("assets/envmap"),this.envMapIntensity=.5,Object.keys(this.mat).forEach((function(e){t.mat[e].type&&"MeshPhysicalMaterial"===t.mat[e].type&&(t.mat[e].envMap=t.envMap)})),this.uniforms={time:{value:0}}}var t,a,r;return t=e,(a=[{key:"bind",value:function(e){}},{key:"createEnvMap",value:function(e){var t=this,a=["posx","negx","posy","negy","posz","negz"].map((function(a){return"".concat(t.path).concat(e,"/").concat(a,".jpg")}));return(new THREE.CubeTextureLoader).load(a)}},{key:"conformGroup",value:function(e){var t=this;"Mesh"===e.type?this.conformMaterial(e.material):e.children&&e.children.length&&e.children.forEach((function(e){t.conformGroup(e)}))}},{key:"conformMaterial",value:function(e){this.loaded[e.name]||(this.loaded[e.name]=e),e.envMap=this.envMap,e.envMapIntensity=this.envMapIntensity}},{key:"createCustomMaterial",value:function(e,t,a){var r=this,i=e.clone();return i.onBeforeCompile=function(e){e.vertexShader="uniform float time;\n".concat(a||"","\n").concat(e.vertexShader),e.vertexShader=e.vertexShader.replace("#include <begin_vertex>",t),e.uniforms.time=r.uniforms.time},i}},{key:"applyAlphaMap",value:function(e,t){e.color.setHex(16777215),e.alphaMap=t,e.transparent=!0,e.side=THREE.DoubleSide,e.depthWrite=!1}},{key:"update",value:function(e){this.uniforms.time.value+=e}}])&&h(t.prototype,a),r&&h(t,r),e}();a(0),a(1),a(2),a(3),a(4),a(5),a(6),a(7),a(8);function c(e,t){for(var a=0;a<t.length;a++){var r=t[a];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var m=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.renderer=new THREE.WebGLRenderer({antialias:!0,alpha:!0}),this.renderer.setClearColor(0,.1),this.renderer.gammaInput=!0,this.renderer.gammaOutput=!0,this.renderer.gammaFactor=2.125,this.renderer.shadowMap.enabled=!0,this.renderer.shadowMap.type=THREE.PCFShadowMap,this.domTarget=document.querySelector("#canvas-target"),this.domTarget.appendChild(this.renderer.domElement)}var t,a,r;return t=e,(a=[{key:"bind",value:function(e){var t=this;this.ref={},this.ref.scene=e.modules.scene.scene,this.ref.camera=e.modules.camera.camera,this.useComposer=!1,this.size=new THREE.Vector2,this.composer=new THREE.EffectComposer(this.renderer),this.passes={render:new THREE.RenderPass(this.ref.scene,this.ref.camera),bloom:new THREE.BloomLite(this.size,.8,.25,.95)},Object.keys(this.passes).forEach((function(e){t.composer.addPass(t.passes[e])})),this.passes.bloom.renderToScreen=!0,this.resize(),window.addEventListener("resize",(function(){t.resize()}))}},{key:"reset",value:function(){this.useComposer=!1}},{key:"resize",value:function(){var e=this,t=window.innerWidth,a=window.innerHeight;this.size.set(t,a),this.renderer.setSize(t,a),this.composer.setSize(t,a),Object.keys(this.passes).forEach((function(r){e.passes[r].setSize&&e.passes[r].setSize(t,a)}))}},{key:"render",value:function(e){this.useComposer?this.composer.render(e):this.renderer.render(this.ref.scene,this.ref.camera)}}])&&c(t.prototype,a),r&&c(t,r),e}();a(9),a(10);function v(e,t){for(var a=0;a<t.length;a++){var r=t[a];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var g=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.path="".concat(APP_ROOT,"/").concat(t,"/"),this.materials={},this.images={},this.loaderFBX=new THREE.FBXLoader,this.loaderOBJ=new THREE.OBJLoader,this.loaderTexture=new THREE.TextureLoader,this.loaderFont=new THREE.FontLoader}var t,a,r;return t=e,(a=[{key:"loadFBX",value:function(e){var t=this;return new Promise((function(a,r){try{var i=t.path+e+(-1==e.indexOf(".fbx")?".fbx":"");t.loaderFBX.load(i,(function(e){a(e)}))}catch(e){console.log(e),r(e)}}))}},{key:"loadOBJ",value:function(e){var t=this;return new Promise((function(a,r){try{t.loaderOBJ.load(t.path+e+".obj",(function(e){a(e)}))}catch(e){console.log(e),r(e)}}))}},{key:"loadFont",value:function(e){var t=this;return new Promise((function(a,r){try{t.loaderFont.load(t.path+e,(function(e){a(e)}))}catch(e){console.log(e),r(e)}}))}},{key:"loadTexture",value:function(e){return this.loaderTexture.load(this.path+e)}}])&&v(t.prototype,a),r&&v(t,r),e}();function A(e,t){for(var a=0;a<t.length;a++){var r=t[a];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var T=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.scene=new THREE.Scene,this.loader=new g("assets"),this.group=new THREE.Group,this.scene.add(this.group)}var t,a,r;return t=e,(a=[{key:"bind",value:function(e){var t=this;this.ref={},this.ref.userInterface=e.modules.userInterface,this.loader.loadFBX("rose").then((function(e){t.rose=e,t.petals=e.children[1],t.stem=e.children[0],t.group.add(e),t.ref.userInterface.setColours()}))}},{key:"update",value:function(e){this.group.rotation.y+=2*Math.PI*(1/32)*e}}])&&A(t.prototype,a),r&&A(t,r),e}();function x(e){return(x="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var E=function e(t){var a=document.createElement(t.type||"div");return Object.keys(t).forEach((function(r){var i=x(t[r]);"object"===i?"childNodes"===r?t[r].forEach((function(t){var r=e(t);a.appendChild(r)})):"style"===r?Object.keys(t[r]).forEach((function(e){a.style[e]=t[r][e]})):"eventListeners"===r||"addEventListener"===r?Object.keys(t[r]).forEach((function(e){a.addEventListener(e,t[r][e])})):Object.keys(t[r]).forEach((function(e){a[r][e]=t[r][e]})):"number"!==i&&"string"!==i||("classList"===r?t[r].split(" ").forEach((function(e){a.classList.add(e)})):a[r]=t[r])})),a};function F(e,t){for(var a=0;a<t.length;a++){var r=t[a];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var y=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.msg=t.msg,this.x=t.position.x,this.y=t.position.y,this.keepAlive=void 0!==t.keepAlive&&t.keepAlive,this.render()}var t,a,r;return t=e,(a=[{key:"remove",value:function(){var e=this;this.el.classList.remove("active"),setTimeout((function(){e.el.parentNode.removeChild(e.el)}),500)}},{key:"render",value:function(){var e=this;this.el=E({classList:"alert",innerHTML:this.msg,style:{top:"".concat(this.y,"px"),left:"".concat(this.x,"px")}});var t="".concat(this.y,"px");document.querySelectorAll(".alert").forEach((function(e){e.style.top==t&&e.classList.remove("active")})),document.querySelector("body").appendChild(this.el),setTimeout((function(){e.el.classList.add("active"),e.keepAlive||setTimeout((function(){e.remove()}),2e3)}),20)}}])&&F(t.prototype,a),r&&F(t,r),e}();function _(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function b(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function P(e,t){for(var a=0;a<t.length;a++){var r=t[a];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var S=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.active=document.querySelector(".overlay").classList.contains("editable"),console.log("[UserInterface] "+(this.active?"Editable":"Not editable"))}var t,a,r;return t=e,(a=[{key:"bind",value:function(e){var t=this;this.ref={},this.ref.scene=e.modules.scene,this.el={},this.el.message=document.querySelector("#card-message"),this.el.controls=document.querySelector(".overlay__controls"),this.el.input={},this.el.input.token=document.querySelector('input[name="token"]'),this.el.input.text=document.querySelector('textarea[name="text"]'),this.el.input.colourBackground=document.querySelector('input[name="colour_background"]'),this.el.input.colourText=document.querySelector('input[name="colour_text"]'),this.el.input.colourPetals=document.querySelector('input[name="colour_petals"]'),this.el.input.colourStem=document.querySelector('input[name="colour_stem"]'),this.el.button={},this.el.button.copyUrl=document.querySelector("#button-copy-url"),this.el.button.mobile=document.querySelector("#button-mobile"),this.el.target={},this.el.target.colourBackground=document.querySelector("#app-target"),this.el.target.colourText=document.querySelector("#card-message"),this.el.target.url=document.querySelector("#url-target"),this.setColours(),this.active&&(this.el.input.text.addEventListener("keydown",(function(){setTimeout((function(){t.setMessage()}),50)}),!0),this.el.input.text.addEventListener("change",(function(){t.setMessage(),t.save()})),this.el.input.colourBackground.addEventListener("change",(function(){t.setColours(),t.save()})),this.el.input.colourText.addEventListener("change",(function(){t.setColours(),t.save()})),this.el.input.colourPetals.addEventListener("change",(function(){t.setColours(),t.save()})),this.el.input.colourStem.addEventListener("change",(function(){t.setColours(),t.save()})),this.el.button.mobile.addEventListener("click",(function(){t.el.button.mobile.classList.toggle("mobile-active"),t.el.controls.classList.toggle("mobile-active")})),this.el.button.copyUrl.addEventListener("click",(function(){t.copyLinkToClipboard()})),this.save())}},{key:"validateColourHex",value:function(e){var t="0x"+e.substring(1,e.length);return!(7!=e.length&&4!=e.length||0!==e.indexOf("#")||isNaN(parseInt(t)))&&e}},{key:"getThreeHex",value:function(e){var t=e.substring(1,e.length);return 3===t.length&&(t=t[0]+t[0]+t[1]+t[1]+t[2]+t[2]),parseInt("0x"+t)}},{key:"getMessage",value:function(){return this.el.input.text.value.replace(/(?:\r\n|\r|\n)/g,"<br>")}},{key:"setMessage",value:function(){this.el.message.innerHTML=this.getMessage()}},{key:"setColours",value:function(){var e=this.validateColourHex(this.el.input.colourBackground.value),t=this.validateColourHex(this.el.input.colourText.value),a=this.validateColourHex(this.el.input.colourPetals.value),r=this.validateColourHex(this.el.input.colourStem.value);if(e?this.el.target.colourBackground.style.background=e:this.inputAlert(this.el.input.colourBackground,{msg:"Invalid hex code"}),t?(this.el.target.colourText.style.color=t,e&&(this.el.target.colourText.style.textShadow="1px 1px ".concat(e))):this.inputAlert(this.el.input.colourText,{msg:"Invalid hex code"}),a){if(this.ref.scene.petals){var i=this.getThreeHex(a);this.ref.scene.petals.material.color.setHex(i)}}else this.inputAlert(this.el.input.colourPetals,{msg:"Invalid hex code"});if(r){if(this.ref.scene.stem){var n=this.getThreeHex(r);this.ref.scene.stem.material.color.setHex(n)}}else this.inputAlert(this.el.input.stem,{msg:"Invalid hex code"})}},{key:"inputAlert",value:function(e,t){var a=e.getBoundingClientRect();return new y(function(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?_(Object(a),!0).forEach((function(t){b(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):_(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}({position:{x:a.left+a.width+8,y:a.top+a.height/2}},t))}},{key:"deferredSave",value:function(){var e=this;this.active&&(this.saveTimeout&&clearTimeout(this.saveTimeout),this.saveTimeout=setTimeout((function(){e.save(),e.saveTimeout=!1}),1e3))}},{key:"save",value:function(){var e=this;if(this.active){var t=this.el.input.token.value,a=this.getMessage(),r=this.validateColourHex(this.el.input.colourBackground.value),i=this.validateColourHex(this.el.input.colourText.value),n=this.validateColourHex(this.el.input.colourPetals.value),o=this.validateColourHex(this.el.input.colourStem.value);if(!(r&&i&&n&&o))return;var s=new FormData;s.append("token",t),s.append("text",a),s.append("colour_background",r),s.append("colour_text",i),s.append("colour_petals",n),s.append("colour_stem",o);var l=this.inputAlert(this.el.button.copyUrl,{msg:"Saving card...",keepAlive:!0});setTimeout((function(){fetch("inc/save-card.php",{method:"POST",body:s}).then((function(e){return e.json()})).then((function(t){l.remove(),e.inputAlert(e.el.button.copyUrl,{msg:"Saved"})}))}),350)}}},{key:"copyLinkToClipboard",value:function(){var e=document.createElement("textarea"),t=this.el.target.url.innerText;console.log("URL:",t),e.value=t,document.body.appendChild(e),e.select(),document.execCommand("copy"),document.body.removeChild(e),this.inputAlert(this.el.button.copyUrl,{msg:"Link copied to clipboard"})}}])&&P(t.prototype,a),r&&P(t,r),e}();function L(e,t){for(var a=0;a<t.length;a++){var r=t[a];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var R=function(){function e(){var t=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.modules={camera:new i,lighting:new s,loading:new u,loop:new d,materials:new p,renderer:new m,scene:new T,userInterface:new S},Object.keys(this.modules).forEach((function(e){t.modules[e].bind&&t.modules[e].bind(t)})),this.modules.loading.hide(),this.modules.loop.start()}var t,a,r;return t=e,(a=[{key:"resize",value:function(){var e=this;Object.keys(this.modules).forEach((function(t){e.modules[t].resize&&e.modules[t].resize()}))}}])&&L(t.prototype,a),r&&L(t,r),e}();window.onload=function(){console.log("This project is open source: https://github.com/meatbags/valentines-day");new R}}]);